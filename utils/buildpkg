#!/bin/bash
#
# The most useless build utility written on shell.
#

set -e

unpck() {
	message "Unpacking tarball: $tarball..."
	case $tarball in
		*.tar*|*.tgz|*.tbz|*.tbz2|*.tlz|*.txz)
			tar -xf $tarball
			;;
		*.zip|*.xpi)
			unzip -o $tarball
			;;
		*.7z)
			7zr x $tarbal
			;;
		*.Z|*.z)
			uncompress -c $tarball | tar -xf -
			;;
		*.rpm)
			rpm2cpio $tarball | cpio -idm --quiet
			;;
		*)
			cp $tarball $SOURCES
	esac
}

ftch() {
	message "Fetching and extracting $name sources..."
	case $fetchurl in
		git://*)
			echo "Cloning git repository: $fetchurl"
			cd $SOURCES
			git clone $fetchurl $gitopts
			;;
		ftp://*|http://*|https://*)
			echo "Fetching $fetchurl"
			cd $SOURCES
			wget -c $fetchurl
			unpck
	esac
}

applypatch() {
	message "Applying patch $@..."
	patch -Np1 -i $@
}

strp() {
	message "Stripping package $name..."
	find $ROOTFS -type f | xargs file 2>/dev/null	| grep "LSB executable"		| grep "not stripped"	| cut -f 1 -d : | xargs $STRIP --strip-all		2>/dev/null || true
	find $ROOTFS -type f | xargs file 2>/dev/null	| grep "shared object"		| grep "not stripped"	| cut -f 1 -d : | xargs $STRIP --strip-unneeded		2>/dev/null || true
	find $ROOTFS -type f | xargs file 2>/dev/null	| grep "current ar archive"	| grep "not stripped"	| cut -f 1 -d : | xargs $STRIP --strip-debug		2>/dev/null || true
	find $ROOTFS -type f | xargs file 2>/dev/null	| grep "libtool library file" 	| cut -f 1 -d : 	| xargs rm -rf						2>/dev/null || true
	cd $ROOTFS
	rm -rf usr/{,local/}{,share/}{doc,man,misc,info,locale} usr{,/local}{,/share},opt/*}/{man,info} usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc}
}

strptc() {
	message "Stripping package $name..."
	find $TOOLS -type f | xargs file 2>/dev/null	| grep "LSB executable"		| grep "not stripped"	| cut -f 1 -d : | xargs strip --strip-all		2>/dev/null || true
	find $TOOLS -type f | xargs file 2>/dev/null	| grep "shared object"		| grep "not stripped"	| cut -f 1 -d : | xargs strip --strip-unneeded		2>/dev/null || true
	find $TOOLS -type f | xargs file 2>/dev/null	| grep "current ar archive"	| grep "not stripped"	| cut -f 1 -d : | xargs strip --strip-debug		2>/dev/null || true
}

check_for_fetch() {
	if [ -n "$fetchurl" ]; then
		ftch
	fi
}

check_for_bld() {
	if type bld &>/dev/null; then
		message "Building package $name..."
		sleep 1
		bld
	fi
}

. $1

case $MODE in
	toolchain)
		check_for_fetch
		check_for_bld
		strptc
		;;
	*)
		check_for_fetch
		check_for_bld
		strp
esac

