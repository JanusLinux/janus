# Description: The GNU Compiler Collection
# URL:         http://gcc.gnu.org
# Maintainer:  protonesso, nagakamira at gmail dot com
# Depends on:  mpc binutils zstd
# Section:     devel

name=gcc
version=10.2.0
islver=0.22.1
release=1
options=('~emptydirs' 'bootstrap')
source=("https://ftp.gnu.org/gnu/gcc/gcc-$version/gcc-$version.tar.xz"
	"http://isl.gforge.inria.fr/isl-$islver.tar.xz")

build() {
	if [ -z "$GCCOPTS" ]; then
		case $BARCH in
			x86_64)
				export GCCOPTS="--with-arch=x86-64 --with-tune=generic --enable-cet=auto"
				;;
			i686)
				export GCCOPTS="--with-arch=i686 --with-tune=generic --enable-cet=auto"
				;;
			aarch64)
				export GCCOPTS="--with-arch=armv8-a --enable-fix-cortex-a53-835769 --enable-fix-cortex-a53-843419"
				;;
			armv7hl)
				export GCCOPTS="--with-arch=armv7-a --with-float=hard --with-fpu=neon"
				;;
			armv6hl)
				export GCCOPTS="--with-arch=armv6 --with-float=hard --with-fpu=vfp"
				;;
			ppc64le)
				export GCCOPTS="--with-abi=elfv2 --enable-decimal-float=no --enable-targets=powerpcle-linux --disable-libquadmath"
				;;
			ppc64)
				export GCCOPTS="--with-abi=elfv2 --enable-decimal-float=no --enable-targets=powerpc-linux --disable-libquadmath"
				;;
			s390x)
				export GCCOPTS="--with-arch=z196 --with-tune=z14 --with-zarch --with-long-double-128 --enable-decimal-float"
				;;
			riscv64)
				export GCCOPTS="--with-arch=rv64imafdc --with-abi=lp64d"
				;;
			*)
				echo "Architecture is not set or is not supported by Ataraxia Linux"
				exit 1
		esac
	fi

	case "$BARCH" in
		*) HASHCONFIG="--with-linker-hash-style=gnu" ;;
	esac

	export CFLAGS_FOR_BUILD=" "
	export FFLAGS_FOR_BUILD=" "
	export CXXFLAGS_FOR_BUILD=" "
	export LDFLAGS_FOR_BUILD=" "
	export CFLAGS_FOR_TARGET=" "
	export FFLAGS_FOR_TARGET=" "
	export CXXFLAGS_FOR_TARGET=" "
	export LDFLAGS_FOR_TARGET=" "

	cd "$SRC"/gcc-$version
	sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

	patch -Np1 -i "$STUFF"/gcc/0001-pure-64-bit.patch
	patch -Np1 -i "$STUFF"/gcc/0001-Use-musl-s-libssp_nonshared.a.patch
	patch -Np1 -i "$STUFF"/gcc/0002-POSIX-memalign.patch
	patch -Np1 -i "$STUFF"/gcc/0003-Support-for-static-PIE.patch
	patch -Np1 -i "$STUFF"/gcc/0004-fix-libstdc-futex-time64.patch
	patch -Np1 -i "$STUFF"/gcc/0005-security-features-for-Ataraxia-Linux.patch
	patch -Np1 -i "$STUFF"/gcc/0006-support-for-fortify-headers-on-musl.patch
	patch -Np1 -i "$STUFF"/gcc/0007-a.patch
	patch -Np1 -i "$STUFF"/gcc/0008-as-needed-gold.patch
	patch -Np1 -i "$STUFF"/gcc/0009-support-for-system-position-directories.patch

	# libcc1 requres gcc_cv_objdump when cross build, but gcc_cv_objdump is
	# set in subdir gcc, so subdir libcc1 can't use it, export it here to
	# fix the problem.
	export gcc_cv_objdump="${CROSS_COMPILE}objdump"

	mv ../isl-$islver isl

	mkdir build
	cd build

	SED=sed \
	../configure $TOOLFLAGS $GCCOPTS $HASHCONFIG \
		--prefix=/usr \
		--libdir=/usr/lib \
		--libexecdir=/usr/lib \
		--with-pkgversion="Ataraxia Linux edition $version for $BARCH" \
		--with-bugurl="https://github.com/ataraxialinux/ataraxia/issues" \
		--with-isl \
		--with-system-zlib \
		--with-zstd \
		--enable-__cxa_atexit \
		--enable-checking=release \
		--enable-clocale=generic \
		--enable-default-pie \
		--enable-default-ssp \
		--enable-install-libiberty \
		--enable-languages=c,c++,lto \
		--enable-libstdcxx-time \
		--enable-linker-build-id \
		--enable-lto \
		--enable-plugin \
		--enable-shared \
		--enable-threads=posix \
		--enable-tls \
		--disable-libsanitizer \
		--disable-libssp \
		--disable-libstdcxx-pch \
		--disable-multilib \
		--disable-nls \
		--disable-symvers \
		--disable-werror

	if [ "$USEBOOTSTRAP" = "yes" ]; then
		make AS_FOR_TARGET="$XTARGET-as" LD_FOR_TARGET="$XTARGET-ld"
	else
		make
	fi

	make -j1 DESTDIR="$PKG" install

	install -Dm755 "$STUFF"/gcc/c89 "$PKG"/usr/bin/c89
	install -Dm755 "$STUFF"/gcc/c99 "$PKG"/usr/bin/c99

	ln -sf ../bin/cpp "$PKG"/usr/lib

	install -dm755 "$PKG"/usr/lib/bfd-plugins
	ln -sf /usr/lib/gcc/$XTARGET/$version/liblto_plugin.so "$PKG"/usr/lib/bfd-plugins/

	mkdir -p "$PKG"/usr/share/gdb/auto-load/usr/lib
	mv "$PKG"/usr/lib/*gdb.py "$PKG"/usr/share/gdb/auto-load/usr/lib

	(
		cd "$PKG"/usr/bin
		mv g++ g++-gcc-$version
		mv gcc gcc-$version
		ln -sf g++-gcc-$version g++
		ln -sf gcc-$version gcc
		ln -sf g++ c++
		ln -sf gcc cc
		ln -sf gcc-$version $XTARGET-gcc
		ln -sf gcc-$version $XTARGET-gcc-$version
		ln -sf gcc-ar $XTARGET-gcc-ar
		ln -sf gcc-nm $XTARGET-gcc-nm
		ln -sf gcc-ranlib $XTARGET-gcc-ranlib
		ln -sf g++-gcc-$version $XTARGET-c++
		ln -sf g++-gcc-$version $XTARGET-g++
	)
}
