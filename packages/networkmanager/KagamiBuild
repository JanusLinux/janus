# Description: Network connection manager and user applications
# URL:         https://wiki.gnome.org/Projects/NetworkManager
# Maintainer:  protonesso, nagakamira at gmail dot com
# Depends on:  meson audit libndp libpsl libteam modemmanager curl gobject-introspection iptables jansson newt nss polkit pygobject vala iwd dhcp
# Section:     net

name=networkmanager
version=1.30.4
release=1
backup=('etc/NetworkManager/NetworkManager.conf')
source=("https://download.gnome.org/sources/NetworkManager/${version%.*}/NetworkManager-$version.tar.xz")

build() {
	filter-flags -flto -fsanitize=cfi -fsanitize-cfi-cross-dso

	cd "$SRC"/NetworkManager-$version
	sed -i '/initrd/d' src/core/meson.build
	sed -zi 's|\nset -e||' tools/create-exports-NetworkManager.sh

	mkdir -p build
	cd build
	ataraxia-meson "$SRC"/NetworkManager-$version \
		-Db_lto=false \
		-Dconfig_dhcp_default=dhclient \
		-Dconfig_plugins_default=keyfile \
		-Ddbus_conf_dir=/usr/share/dbus-1/system.d \
		-Ddhclient=true \
		-Ddnsmasq=/usr/bin/dnsmasq \
		-Ddocs=false \
		-Debpf=true \
		-Diptables=/usr/bin/iptables \
		-Diwd=true \
		-Dmodify_system=true \
		-Dnmtui=true \
		-Dovs=false \
		-Dppp=false \
		-Dqt=false \
		-Dselinux=false \
		-Dsession_tracking_consolekit=false \
		-Dsession_tracking=systemd \
		-Dsuspend_resume=systemd \
		-Dsystemdsystemunitdir=/usr/lib/systemd/system \
		-Dteamdctl=true \
		-Dtests=no \
		-Dudev_dir=/usr/lib/udev \
		-Dvapi=true
	samu
	DESTDIR="$PKG" samu install

	install	-Dm644 "$STUFF"/sysusers.d/networkmanager.conf "$PKG"/usr/lib/sysusers.d/networkmanager.conf

	cat > "$PKG"/etc/NetworkManager/NetworkManager.conf <<-EOF
		[main]
		auth-polkit=true
		dns=none
		plugins=keyfile
		systemd-resolved=false

		[device]
		wifi.backend=iwd
	EOF

	install -d -o root -g 102 -m 750 "$PKG"/usr/share/polkit-1/rules.d
	cat > "$PKG"/usr/share/polkit-1/rules.d/org.freedesktop.NetworkManager.rules <<-EOF
		polkit.addRule(function(action, subject) {
			if (action.id.indexOf("org.freedesktop.NetworkManager.") == 0 && subject.isInGroup("netdev")) {
				return polkit.Result.YES;
			}
		});
	EOF
}
