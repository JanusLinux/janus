# Description: The Linux kernel
# URL:         https://www.kernel.org/
# Maintainer:  protonesso, nagakamira at gmail dot com
# Section:     kernel

name=linux
version=5.11.14
hardenedver=5.11.14-hardened1
case $version in
	*.*.*) kver=$version;;
	*.*) kver=$version.0;;
esac
release=1
options=('~strip' 'bootstrap' '~ccache')
source=("https://cdn.kernel.org/pub/linux/kernel/v5.x/$name-$version.tar.xz"
	"https://github.com/anthraxx/linux-hardened/releases/download/$hardenedver/linux-hardened-$hardenedver.patch")

build() {
	local KARCH IMAGELOC XCC XLD

	case $BARCH in
		x86_64)
			KARCH="x86_64"
			IMAGELOC="arch/x86/boot/bzImage"
			;;
		i386)
			KARCH="i386"
			IMAGELOC="arch/x86/boot/bzImage"
			;;
		arm64)
			KARCH="arm64"
			IMAGELOC="arch/arm64/boot/Image"
			;;
		arm)
			KARCH="arm"
			IMAGELOC="arch/arm/boot/zImage"
			;;
		powerpc64le|powerpc64|powerpc)
			KARCH="powerpc"
			IMAGELOC="vmlinux"
			;;
		powerpcspe)
			KARCH="powerpc"
			IMAGELOC="arch/powerpc/boot/uImage"
			;;
		riscv64)
			KARCH="riscv"
			IMAGELOC="arch/riscv/boot/Image"
			;;
		*)
			echo "Architecture is not set or is not supported by Ataraxia GNU/Linux"
			exit 1
	esac

	case "$BARCH" in
		riscv64) XCC="${CROSS_COMPILE}clang --ld-path=$(command -v ${CROSS_COMPILE}ld.bfd)"; XLD="${CROSS_COMPILE}ld.bfd" ;;
		*) XCC="${CROSS_COMPILE}clang"; XLD="${CROSS_COMPILE}ld" ;;
	esac

	cd "$SRC"/$name-$version
	patch -Np1 -i "$SRC"/linux-hardened-$hardenedver.patch
	patch -Np1 -i "$STUFF"/linux/324aac90c651c1bac699a4918eb9327d6afa2776.patch
	patch -Np1 -i "$STUFF"/linux/0010-vfio.patch
	patch -Np1 -i "$STUFF"/linux/0110-Initialize-ata-before-graphics.patch

	# Swap sucks
	sed -i 's/int vm_swappiness = 60/int vm_swappiness = 33/g' mm/vmscan.c
	sed -zi 's|\nEXTRAVERSION = -hardened1||' Makefile

	unset LDFLAGS HOSTCFLAGS HOSTCXXFLAGS HOSTLDFLAGS
	make CC="$XCC" LD="$XLD" mrproper

	cp "$STUFF"/linux/x509.genkey certs/

	openssl req -new -nodes -utf8 -sha1 -days 36500 -batch -x509 \
		-config certs/x509.genkey -outform PEM \
		-out certs/signing_key.pem -keyout certs/signing_key.pem

	chmod 0600 certs/signing_key.pem
	openssl pkey -in certs/signing_key.pem -out certs/signing_prv.key
	openssl x509 -outform der -in certs/signing_key.pem -out certs/signing_crt.crt

	"$STUFF"/configure-kernel -a $BARCH

	if [ "$USEBOOTSTRAP" = "yes" ]; then
		yes '' | make ARCH=$KARCH CROSS_COMPILE=${CROSS_COMPILE} CC="$XCC" LD="$XLD"
	else
		yes '' | make ARCH=$KARCH CC="$XCC" LD="$XLD"
	fi

	if [ "$USEBOOTSTRAP" = "yes" ]; then
		make ARCH=$KARCH CROSS_COMPILE=${CROSS_COMPILE} CC="$XCC" LD="$XLD" INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH="$PKG"/usr modules_install
	else
		make ARCH=$KARCH CC="$XCC" LD="$XLD" INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH="$PKG"/usr modules_install
	fi

	depmod -a -b "$PKG"/usr ${kver}-ataraxia

	case $BARCH in
		arm64|arm)
			if [ "$USEBOOTSTRAP" = "yes" ]; then
				make ARCH=$KARCH CROSS_COMPILE=${CROSS_COMPILE} CC="$XCC" LD="$XLD" INSTALL_DTBS_PATH="$PKG"/boot/dtbs dtbs_install
			else
				make ARCH=$KARCH CC="$XCC" LD="$XLD" INSTALL_DTBS_PATH="$PKG"/boot/dtbs dtbs_install
			fi
			;;
	esac

	mkdir -p "$PKG"/boot
	cp "$IMAGELOC" "$PKG"/boot/vmlinuz
	cp .config "$PKG"/boot/config

	rm -rf "$PKG"/usr/lib/modules/${kver}-ataraxia/build
	rm -rf "$PKG"/usr/lib/modules/${kver}-ataraxia/source
}
