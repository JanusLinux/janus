# Description: The Linux kernel
# URL:         https://www.kernel.org/
# Maintainer:  protonesso, nagakamira at gmail dot com
# Section:     kernel

name=linux
version=5.10.10
hardenedver=5.10.4.a
case $version in
	*.*.*) kver=$version;;
	*.*) kver=$version.0;;
esac
release=1
options=('~strip' 'bootstrap' '~ccache')
source=("https://cdn.kernel.org/pub/linux/kernel/v5.x/$name-$version.tar.xz"
	"https://github.com/anthraxx/linux-hardened/releases/download/$hardenedver/linux-hardened-$hardenedver.patch")

build() {
	local KARCH IMAGELOC

	case $BARCH in
		amd64)
			KARCH="x86_64"
			IMAGELOC="arch/x86/boot/bzImage"
			;;
		x86)
			KARCH="i386"
			IMAGELOC="arch/x86/boot/bzImage"
			;;
		arm64)
			KARCH="arm64"
			IMAGELOC="arch/arm64/boot/Image"
			;;
		armv7l|armv6l|armv5te)
			KARCH="arm"
			IMAGELOC="arch/arm/boot/zImage"
			;;
		mips64|mips64el|mips|mipsel)
			KARCH="mips"
			IMAGELOC="vmlinux"
			;;
		ppc64le|ppc64)
			KARCH="powerpc"
			IMAGELOC="vmlinux"
			;;
		riscv64)
			KARCH="riscv"
			IMAGELOC="arch/riscv/boot/Image"
			;;
		*)
			echo "Architecture is not set or is not supported by Ataraxia Linux"
			exit 1
	esac

	cd "$SRC"/$name-$version
	patch -Np1 -i "$SRC"/linux-hardened-$hardenedver.patch
	patch -Np1 -i "$STUFF"/linux/324aac90c651c1bac699a4918eb9327d6afa2776.patch
	patch -Np1 -i "$STUFF"/linux/0010-vfio.patch
	patch -Np1 -i "$STUFF"/linux/0110-Initialize-ata-before-graphics.patch
	patch -Np1 -i "$STUFF"/linux/lto.patch
	patch -Np1 -i "$STUFF"/linux/cfi.patch

	# Swap sucks
	sed -i 's/int vm_swappiness = 60/int vm_swappiness = 33/g' mm/vmscan.c

	unset LDFLAGS
	make mrproper

	cp "$STUFF"/linux/x509.genkey certs/

	openssl req -new -nodes -utf8 -sha1 -days 36500 -batch -x509 \
		-config certs/x509.genkey -outform PEM \
		-out certs/signing_key.pem -keyout certs/signing_key.pem

	chmod 0600 certs/signing_key.pem
	openssl pkey -in certs/signing_key.pem -out certs/signing_prv.key
	openssl x509 -outform der -in certs/signing_key.pem -out certs/signing_crt.crt

	"$STUFF"/configure-kernel -a $BARCH

	if [ "$USEBOOTSTRAP" = "yes" ]; then
		yes '' | make ARCH=$KARCH CROSS_COMPILE=${CROSS_COMPILE}
	else
		yes '' | make ARCH=$KARCH
	fi

	if [ "$USEBOOTSTRAP" = "yes" ]; then
		make ARCH=$KARCH CROSS_COMPILE=${CROSS_COMPILE} INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH="$PKG"/usr modules_install
	else
		make ARCH=$KARCH INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH="$PKG"/usr modules_install
	fi

	depmod -a -b "$PKG"/usr ${kver}-ataraxia

	case $BARCH in
		arm64|armv7l|armv6l|armv5te)
			if [ "$USEBOOTSTRAP" = "yes" ]; then
				make ARCH=$KARCH CROSS_COMPILE=${CROSS_COMPILE} INSTALL_DTBS_PATH="$PKG"/boot/dtbs dtbs_install
			else
				make ARCH=$KARCH INSTALL_DTBS_PATH="$PKG"/boot/dtbs dtbs_install
			fi
			;;
	esac

	cp "$IMAGELOC" "$PKG"/usr/lib/modules/${kver}-ataraxia/vmlinuz
	cp .config "$PKG"/usr/lib/modules/${kver}-ataraxia/config

	echo "${kver}-ataraxia" >> "$PKG"/usr/lib/modules/${kver}-ataraxia/version

	rm -rf "$PKG"/usr/lib/modules/${kver}-ataraxia/build
	rm -rf "$PKG"/usr/lib/modules/${kver}-ataraxia/source
}
