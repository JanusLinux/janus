# Maintainer: protonesso <nagakamira@gmail.com>

pkgname=linux
pkgver=4.20.6
zerover=$pkgver
pkgrel=2
pkgdesc="The Linux kernel"
arch=('x86_64' 'x86' 'arm64' 'armv7l' 'armv5tel' 'ppc64le' 'ppc64' 'ppc')
url="https://www.kernel.org/"
license=('GPL-2.0')
depends=('coreutils' 'kmod')
makedepends=('kmod' 'bc' 'libelf' 'xz' 'openssl')
options=('!strip')
source=("https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-$pkgver.tar.xz"
	'60-linux.hook')
md5sums=('43cb8498de6830c9ed8021d3ab52741c'
         '78005a058be10c53daa5e4b620411c0e')

yconfig() {
	while [ $# -ne 0 ]; do
		sed -i "s/.*CONFIG_$1\ .*/CONFIG_$1=y/" .config
		grep ^"CONFIG_$1=y" .config || echo "CONFIG_$1=y" >> .config
		shift 1
	done
}

nconfig() {
	while [ $# -ne 0 ]; do
		sed -i "s/.*CONFIG_$1\ .*/# CONFIG_$1  is not set/" .config
		grep ^"# CONFIG_$1  is not set" .config || echo "# CONFIG_$1  is not set" >> .config
		shift 1
	done
}

varconfig() {
	FUONE="$1"
	FUTWO="$2"

	./scripts/config --set-val "$FUONE" "$FUTWO"
}

strconfig() {
	FUONE="$1"
	FUTWO="$2"

	./scripts/config --set-str "$FUONE" "$FUTWO"
}

prepare() {
	set +x

	cd "$srcdir"/$pkgname-$pkgver
	msg "Preparing the kernel"
	make mrproper

	case $CARCH in
		x86_64)
			export XKARCH="x86_64"
			export DEFCONFIG="x86_64_defconfig"
			;;
		x86)
			export XKARCH="i386"
			export DEFCONFIG="i386_defconfig"
			;;
		arm64)
			export XKARCH="arm64"
			export DEFCONFIG="defconfig"
			;;
		armv7l)
			export XKARCH="arm"
			export DEFCONFIG="multi_v7_defconfig"
			;;
		armv5tel)
			export XKARCH="arm"
			export DEFCONFIG="multi_v5_defconfig"
			;;
		ppc64le)
			export XKARCH="powerpc"
			export DEFCONFIG="powernv_defconfig"
			;;
		ppc64)
			export XKARCH="powerpc"
			export DEFCONFIG="g5_defconfig"
			;;
		ppc)
			export XKARCH="powerpc"
			export DEFCONFIG="pmac32_defconfig"
			;;
		*)
			echo "Architecture is not set or is not supported by 'bootstrap' script"
			exit 1
	esac

	make ARCH=$XKARCH $DEFCONFIG

	case $CARCH in
		ppc64le)
				yconfig POWER8
				;;
	esac

	yes '' | make ARCH=$XKARCH oldconfig
}

build() {
	msg "Building the kernel"
	unset CFLAGS CXXFLAGS

	cd "$srcdir"/$pkgname-$pkgver
	case $CARCH in
		x86_64)
			export XKARCH="x86_64"
			;;
		x86)
			export XKARCH="i386"
			;;
		arm64)
			export XKARCH="arm64"
			;;
		armv7l|armv5tel)
			export XKARCH="arm"
			;;
		ppc64le|ppc64|ppc)
			export XKARCH="powerpc"
			;;
		*)
			echo "Architecture is not set or is not supported by 'bootstrap' script"
			exit 1
	esac

	make ARCH=$XKARCH
}

package() {
	msg "Installing the kernel"

	cd "$srcdir"/$pkgname-$pkgver
	case $CARCH in
		x86_64)
			export XKARCH="x86_64"
			export IMG="arch/x86/boot/bzImage"
			;;
		x86)
			export XKARCH="i386"
			export IMG="arch/x86/boot/bzImage"
			;;
		arm64)
			export XKARCH="arm64"
			export IMG="arch/arm64/boot/Image"
			;;
		armv7l|armv5tel)
			export XKARCH="arm"
			export IMG="arch/arm/boot/zImage"
			;;
		ppc64le|ppc64|ppc)
			export XKARCH="powerpc"
			export IMG="vmlinux"
			;;
		*)
			echo "Architecture is not set or is not supported by 'bootstrap' script"
			exit 1
	esac

	mkdir -p "$pkgdir"/lib/modules/

	sed -i '2iexit 0' scripts/depmod.sh
	make ARCH=$XKARCH INSTALL_MOD_PATH="$pkgdir" modules_install

	mkdir -p "$pkgdir"/boot
	cp -i $IMG "$pkgdir"/boot/vmlinuz-linux

	case $CARCH in
		arm64|armv7l|armv5tel)
			make ARCH=$XKARCH INSTALL_DTBS_PATH="$pkgdir"/boot/dtbs dtbs_install
			;;
	esac

	install -dm755 "$pkgdir"/share/libalpm/hooks/
	install -m644 "$srcdir"/*linux.hook "$pkgdir"/share/libalpm/hooks/

	local subst="
		s|%pkgname%|$pkgname|g
		s|%KERNVER%|$zerover|g
	"

	sed -i "$subst" "$pkgdir"/share/libalpm/hooks/60-linux.hook

	cd "$pkgdir"/lib/modules/$zerover
	rm -f source build
	ln -sf ../../../src/linux build
}
