# Description: Systems programming language focused on safety, speed and concurrency
# URL:         https://www.rust-lang.org/
# Maintainer:  protonesso, nagakamira at gmail dot com
# Depends on:  curl cmake python2 libssh2 llvm

name=rustc
version=1.27.2
release=1
source=(https://static.rust-lang.org/dist/$name-$version-src.tar.gz)

build() {
	mkdir -p $(pwd)/bootstrap
	export BOOTSTRAP="$(pwd)/bootstrap"
	export PATH="$BOOTSTRAP/bin:$PATH"

	case $BARCH in
		x86_64)
			export RUSTTARGET="x86_64-unknown-linux-musl"
			;;
		aarch64)
			export RUSTTARGET="aarch64-unknown-linux-musl"
			;;
		armv7h)
			export RUSTTARGET="armv7-unknown-linux-musleabihf"
			;;
		armv6h)
			export RUSTTARGET="arm-unknown-linux-musleabihf"
			;;
		mipsel)
			export RUSTTARGET="mipsel-unknown-linux-musl"
			;;
		mips)
			export RUSTTARGET="mips-unknown-linux-musl"
			;;
		*)
			echo "Unsupported architecture"
			exit 1
	esac

	curl https://static.rust-lang.org/rustup.sh | sh -s -- \
		--with-target=$RUSTTARGET --yes \
		--channel=stable \
		--prefix=$BOOTSTRAP

	cd $name-$version-src
	patch -Np1 -i $KEEP/rustc/0001-Require-static-native-libraries-when-linking-static-.patch
	patch -Np1 -i $KEEP/rustc/0002-Remove-nostdlib-and-musl_root-from-musl-targets.patch
	patch -Np1 -i $KEEP/rustc/0003-Switch-musl-targets-to-link-dynamically-by-default.patch
	patch -Np1 -i $KEEP/rustc/0004-Prefer-libgcc_eh-over-libunwind-for-musl.patch
	patch -Np1 -i $KEEP/rustc/0005-Fix-LLVM-build.patch
	patch -Np1 -i $KEEP/rustc/0006-Fix-rustdoc-for-cross-targets.patch
	patch -Np1 -i $KEEP/rustc/0007-Add-openssl-configuration-for-musl-targets.patch
	patch -Np1 -i $KEEP/rustc/0008-Don-t-pass-CFLAGS-to-the-C-compiler.patch
	patch -Np1 -i $KEEP/rustc/0009-liblibc.patch
	patch -Np1 -i $KEEP/rustc/0010-llvm.patch
	patch -Np1 -i $KEEP/rustc/rust-1.27.0-libressl-2.7.0.patch
	patch -Np1 -i $KEEP/rustc/static-pie.patch
	./configure \
		--build=$(cc -dumpmachine) \
		--host=$RUSTTARGET \
		--target=$RUSTTARGET \
		--prefix=/usr \
		--local-rust-root=/usr \
		--llvm-root=/usr \
		--musl-root=/usr \
		--release-channel=stable \
		--set="rust.deny-warnings=false" \
		--tools="analysis,cargo,src" \
		--enable-extended \
		--enable-llvm-link-shared \
		--enable-local-rust \
		--enable-locked-deps \
		--enable-option-checking \
		--enable-vendor \
		--disable-docs \
		--disable-jemalloc
	./x.py build -v --jobs ${JOBS:-2}
	DESTDIR=$PKG ./x.py install -v

	chown -R root:root $PKG

	echo "Stripping $name package..."
	find $PKG -type f | xargs file 2>/dev/null | grep "LSB executable"       | cut -f 1 -d : | xargs $STRIP --strip-all			2>/dev/null || true
	find $PKG -type f | xargs file 2>/dev/null | grep "shared object"        | cut -f 1 -d : | xargs $STRIP --strip-unneeded		2>/dev/null || true
	find $PKG -type f | xargs file 2>/dev/null | grep "current ar archive"   | cut -f 1 -d : | xargs $STRIP --strip-debug			2>/dev/null || true
	find $PKG -type f | xargs file 2>/dev/null | grep "libtool library file" | cut -f 1 -d : | xargs rm -rf					2>/dev/null || true
	cd $PKG
	rm -rf {,usr/}{,local/}{,share/}{doc,man,info,locale} usr{,/local}{,/share},opt/*}/{man,info} usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc}
	rm -rf {,usr/}lib/charset.alias
}
