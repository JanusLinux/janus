# Maintainer: protonesso <nagakamira@gmail.com>

pkgname=('llvm' 'llvm-libs' 'clang')
pkgver=6.0.0
pkgrel=1
arch=('x86_64' 'aarch64')
url="https://llvm.org/"
license=('custom:University of Illinois/NCSA Open Source License')
groups=('base')
source=("http://llvm.org/releases/$pkgver/llvm-$pkgver.src.tar.xz"
	"http://llvm.org/releases/$pkgver/cfe-$pkgver.src.tar.xz"
	"http://llvm.org/releases/$pkgver/compiler-rt-$pkgver.src.tar.xz"
	"http://llvm.org/releases/$pkgver/libunwind-$pkgver.src.tar.xz"
	"llvm-003-musl.patch"
	"cfe-001-fix-stdint.patch"
	"cfe-003-fix-unwind-chain-inclusion.patch"
	"cfe-004-add-musl-triples.patch")

prepare() {
	cd $srcdir/llvm-$pkgver.src
	mkdir build build-tblgen
	msg "Patching LLVM"
	patch -Np1 -i $srcdir/llvm-003-musl.patch

	cd $srcdir/cfe-$pkgver.src
	msg "Patching Clang"
	patch -Np1 -i $srcdir/cfe-001-fix-stdint.patch
	patch -Np1 -i $srcdir/cfe-003-fix-unwind-chain-inclusion.patch
	patch -Np1 -i $srcdir/cfe-004-add-musl-triples.patch

	cd $srcdir/compiler-rt-$pkgver.src
	msg "Patching compiler-rt"
	sed -i 's/set(COMPILER_RT_HAS_SANITIZER_COMMON TRUE)/set(COMPILER_RT_HAS_SANITIZER_COMMON FALSE)/' cmake/config-ix.cmake

	cd $srcdir/$pkgname-$pkgver.src
	mv $srcdir/cfe-$pkgver.src tools/clang
	mv $srcdir/compiler-rt-$pkgver.src projects/compiler-rt
	mv $srcdir/libunwind-$pkgver.src projects/libunwind
}

build() {
	cd $srcdir/llvm-$pkgver.src
	cd build-tblgen
	CC="$HOSTCC" CXX="$HOSTCXX" \
	cmake $srcdir/$pkgname-$pkgver.src -DCMAKE_BUILD_TYPE=Release
	make -C utils/TableGen
	make -C tools/clang/utils/TableGen

	cd ../build
	cmake $srcdir/$pkgname-$pkgver.src \
		-DLLVM_TABLEGEN=$srcdir/llvm-$pkgver.src/build-tblgen/bin/llvm-tblgen \
		-DCLANG_TABLEGEN=$srcdir/llvm-$pkgver.src/build-tblgen/bin/clang-tblgen \
		-DCMAKE_C_COMPILER=$CC \
		-DCMAKE_CXX_COMPILER=$CXX \
		-DLIBUNWIND_ENABLE_SHARED=ON \
		-DCLANG_DEFAULT_RTLIB=compiler-rt \
		-DLLVM_DEFAULT_TARGET_TRIPLE=$XTARGET \
		-DLLVM_HOST_TRIPLE="$XTARGET" \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_BUILD_TYPE=Release \
		-DLLVM_TARGET_ARCH="$LARCH" \
		-DLLVM_TARGETS_TO_BUILD="$TARGETS" \
		-DLLVM_BUILD_LLVM_DYLIB=ON \
		-DLLVM_LINK_LLVM_DYLIB=ON
	make

	mkdir -p $srcdir/libs
	mkdir -p $srcdir/clang
}

package_llvm() {
	pkgdesc="Collection of modular and reusable compiler and toolchain technologies"
	depends=('llvm-libs' 'perl')

	cd $srcdir/llvm-$pkgver.src/build

	make DESTDIR=$pkgdir install

	mv -f $pkgdir/usr/lib/lib{LLVM,LTO}*.so* $srcdir/libs

	mkdir -p $srcdir/clang/usr/include/{clang,clang-c}
	mkdir -p $srcdir/clang/usr/bin
	mkdir -p $srcdir/clang/usr/lib/{clang,cmake/clang}
	mkdir -p $srcdir/clang/usr/share/clang
	mv -f $pkgdir/usr/include/clang/* $srcdir/clang/usr/include/clang/
	mv -f $pkgdir/usr/include/clang-c/* $srcdir/clang/usr/include/clang-c
	mv -f $pkgdir/usr/bin/clang* $srcdir/clang/usr/bin
	mv -f $pkgdir/usr/bin/c-index-test $srcdir/clang/usr/bin
	mv -f $pkgdir/usr/lib/clang/* $srcdir/clang/usr/lib/clang
	mv -f $pkgdir/usr/lib/cmake/clang/* $srcdir/clang/usr/lib/cmake/clang
	mv -f $pkgdir/usr/lib/libclang* $srcdir/clang/usr/lib
	mv -f $pkgdir/usr/share/clang/* $srcdir/clang/usr/share/clang

	rm -rf $pkgdir/usr/include/{clang,clang-c}
	rm -rf $pkgdir/usr/lib/{clang,cmake/clang}
	rm -rf $pkgdir/usr/share/clang

	msg "Stripping package $pkgname..."
	find $pkgdir -type f | xargs file 2>/dev/null | grep "LSB executable"       | cut -f 1 -d : | xargs $STRIP --strip-all			2>/dev/null || true
	find $pkgdir -type f | xargs file 2>/dev/null | grep "shared object"        | cut -f 1 -d : | xargs $STRIP --strip-unneeded		2>/dev/null || true
	find $pkgdir -type f | xargs file 2>/dev/null | grep "current ar archive"   | cut -f 1 -d : | xargs $STRIP --strip-debug		2>/dev/null || true
	cd $pkgdir
	rm -rf usr/{,local/}{,share/}{doc,man,info,locale} usr{,/local}{,/share},opt/*}/{man,info} usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc}
	rm -rf $pkgdir/{,usr/}lib/charset.alias
}

package_llvm-libs() {
	pkgdesc="LLVM runtime libraries"
	depends=('gcc-libs' 'zlib' 'ncurses' 'readline')

	install -d $pkgdir/usr/lib
	cp -P \
		$srcdir/libs/lib{LLVM,LTO}*.so* \
		$pkgdir/usr/lib/

	install -d $pkgdir/usr/lib/bfd-plugins
	ln -s ../LLVMgold.so $pkgdir/usr/lib/bfd-plugins/LLVMgold.so

	msg "Stripping package $pkgname..."
	find $pkgdir -type f | xargs file 2>/dev/null | grep "LSB executable"       | cut -f 1 -d : | xargs $STRIP --strip-all			2>/dev/null || true
	find $pkgdir -type f | xargs file 2>/dev/null | grep "shared object"        | cut -f 1 -d : | xargs $STRIP --strip-unneeded		2>/dev/null || true
	find $pkgdir -type f | xargs file 2>/dev/null | grep "current ar archive"   | cut -f 1 -d : | xargs $STRIP --strip-debug		2>/dev/null || true
	cd $pkgdir
	rm -rf usr/{,local/}{,share/}{doc,man,info,locale} usr{,/local}{,/share},opt/*}/{man,info} usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc}
	rm -rf $pkgdir/{,usr/}lib/charset.alias
}

package_clang() {
	pkgdesc="C language family frontend for LLVM"
	depends=('llvm-libs' 'binutils')

	mkdir -p $pkgdir

	cp -a $srcdir/clang/* $pkgdir/

	msg "Stripping package $pkgname..."
	find $pkgdir -type f | xargs file 2>/dev/null | grep "LSB executable"       | cut -f 1 -d : | xargs $STRIP --strip-all			2>/dev/null || true
	find $pkgdir -type f | xargs file 2>/dev/null | grep "shared object"        | cut -f 1 -d : | xargs $STRIP --strip-unneeded		2>/dev/null || true
	find $pkgdir -type f | xargs file 2>/dev/null | grep "current ar archive"   | cut -f 1 -d : | xargs $STRIP --strip-debug		2>/dev/null || true
	cd $pkgdir
	rm -rf usr/{,local/}{,share/}{doc,man,info,locale} usr{,/local}{,/share},opt/*}/{man,info} usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc}
	rm -rf $pkgdir/{,usr/}lib/charset.alias
}
