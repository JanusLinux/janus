# Description: The Linux kernel for Raspberry Pi 4
# URL:         https://www.kernel.org/
# Maintainer:  protonesso, nagakamira at gmail dot com
# Section:     kernel

name=linux-rpi4
version=5.10.16
hardenedver=5.10.16-hardened1
commit=b8dc11c1933641989e9fbe7e6b95cc5a317b23b8
case $version in
	*.*.*) kver=$version;;
	*.*) kver=$version.0;;
esac
release=1
options=('~strip' 'bootstrap' '~ccache')
source=("https://github.com/raspberrypi/linux/archive/$commit.tar.gz::archive=$name-$commit.tar.gz"
	"https://github.com/anthraxx/linux-hardened/releases/download/$hardenedver/linux-hardened-$hardenedver.patch")

build() {
	if [ "$BARCH" != "arm64" ]; then
		die "This kernel is intended to run on 64-bit ARM processor"
	fi

	cd "$SRC"/linux-$commit
	patch -Np1 -i "$SRC"/linux-hardened-$hardenedver.patch
	patch -Np1 -i "$STUFF"/linux-rpi4/324aac90c651c1bac699a4918eb9327d6afa2776.patch
	patch -Np1 -i "$STUFF"/linux-rpi4/0010-vfio.patch
	patch -Np1 -i "$STUFF"/linux-rpi4/0110-Initialize-ata-before-graphics.patch

	# Swap sucks
	sed -i 's/int vm_swappiness = 60/int vm_swappiness = 33/g' mm/vmscan.c

	unset LDFLAGS HOSTCFLAGS HOSTCXXFLAGS HOSTLDFLAGS
	if [ "$USEBOOTSTRAP" = "yes" ]; then
		make CC=${CROSS_COMPILE}clang mrproper
	else
		make mrproper
	fi

	cp "$STUFF"/linux-rpi4/x509.genkey certs/

	openssl req -new -nodes -utf8 -sha1 -days 36500 -batch -x509 \
		-config certs/x509.genkey -outform PEM \
		-out certs/signing_key.pem -keyout certs/signing_key.pem

	chmod 0600 certs/signing_key.pem
	openssl pkey -in certs/signing_key.pem -out certs/signing_prv.key
	openssl x509 -outform der -in certs/signing_key.pem -out certs/signing_crt.crt

	"$STUFF"/configure-kernel -a arm64 -f rpi4

	if [ "$USEBOOTSTRAP" = "yes" ]; then
		yes '' | make ARCH=arm64 CROSS_COMPILE=${CROSS_COMPILE} CC=${CROSS_COMPILE}clang
	else
		yes '' | make ARCH=arm64
	fi

	if [ "$USEBOOTSTRAP" = "yes" ]; then
		make ARCH=arm64 CROSS_COMPILE=${CROSS_COMPILE} CC=${CROSS_COMPILE}clang INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH="$PKG"/usr modules_install
	else
		make ARCH=arm64 INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH="$PKG"/usr modules_install
	fi

	depmod -a -b "$PKG"/usr ${kver}-ataraxia

	if [ "$USEBOOTSTRAP" = "yes" ]; then
		make ARCH=arm64 CROSS_COMPILE=${CROSS_COMPILE} CC=${CROSS_COMPILE}clang INSTALL_DTBS_PATH="$PKG"/boot dtbs_install
	else
		make ARCH=arm64 INSTALL_DTBS_PATH="$PKG"/boot dtbs_install
	fi

	mkdir -p "$PKG"/boot
	cp arch/arm64/boot/Image "$PKG"/boot/kernel8.img
	cp .config "$PKG"/usr/lib/modules/${kver}-ataraxia/config

	install -m644 "$STUFF"/linux-rpi4/config.txt "$PKG"/boot/config.txt
	install -m644 "$STUFF"/linux-rpi4/cmdline.txt "$PKG"/boot/cmdline.txt

	echo "${kver}-ataraxia" >> "$PKG"/usr/lib/modules/${kver}-ataraxia/version

	rm -rf "$PKG"/usr/lib/modules/${kver}-ataraxia/build
	rm -rf "$PKG"/usr/lib/modules/${kver}-ataraxia/source
}
