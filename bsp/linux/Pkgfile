# Description: The Linux kernel
# URL:         https://www.kernel.org/
# Maintainer:  protonesso, nagakamira at gmail dot com
# Depends on:  kmod bc libelf xz openssl

name=linux
version=4.19.35
release=2
source=("https://cdn.kernel.org/pub/linux/kernel/v4.x/$name-$version.tar.xz")
BOOTSTRAP=yes
NO_RUN_STRIP=1

yconfig() {
	while [ $# -ne 0 ]; do
		./scripts/config --enable $1
		shift 1
	done
}

mconfig() {
	while [ $# -ne 0 ]; do
		./scripts/config --module $1
		shift 1
	done
}

nconfig() {
	while [ $# -ne 0 ]; do
		./scripts/config --disable $1
		shift 1
	done
}

varconfig() {
	FUONE="$1"
	FUTWO="$2"

	./scripts/config --set-val "$FUONE" "$FUTWO"
}

strconfig() {
	FUONE="$1"
	FUTWO="$2"

	./scripts/config --set-str "$FUONE" "$FUTWO"
}

generate_config() {
	case $BARCH in
		x86_64|i486)
			SUBKARCH="x86"
			;;
		*)
			SUBKARCH="$XKARCH"
			;;
	esac

	case $BARCH in
		x86_64)
			export DEFCONFIG="x86_64_defconfig"
			;;
		i486)
			export DEFCONFIG="i386_defconfig"
			;;
		ppc64le)
			export DEFCONFIG="powernv_defconfig"
			;;
		ppc64)
			if [ "$PS3" = "yes" ]; then
				export DEFCONFIG="ps3_defconfig"
			else
				export DEFCONFIG="g5_defconfig"
			fi
			;;
		ppc)
			export DEFCONFIG="pmac32_defconfig"
			;;
		riscv64|riscv32)
			export DEFCONFIG="defconfig"
			;;
		*)
			echo "Architecture is not set or is not supported by Ataraxia Linux"
			exit 1
	esac

	if [ "$CROSS" = "yes" ]; then
		make ARCH=$XKARCH CROSS_COMPILE=${CROSS_COMPILE} $DEFCONFIG
	else
		make ARCH=$XKARCH $DEFCONFIG
	fi

	case $BARCH in
		x86_64)
			yconfig 64BIT PCI BLK_DEV_SD ATA ATA_SFF ATA_BMDMA ATA_PIIX \
				E1000 SERIAL_8250 SERIAL_8250_CONSOLE RTC_CLASS IA32_EMULATION \
				EFI EFI_STUB EFI_MIXED EFI_VARS FB_EFI EFI_RUNTIME_MAP EFIVAR_FS \
				FB_HYPERV VBOXGUEST XEN XEN_PV XEN_PV_SMP \
				XEN_DOM0 XEN_PVHVM XEN_PVHVM_SMP XEN_512GB XEN_SAVE_RESTORE XEN_PVH XEN_BALLOON \
				XEN_SELFBALLOONING XEN_BALLOON_MEMORY_HOTPLUG XEN_SCRUB_PAGES_DEFAULT \
				XEN_DEV_EVTCHN XEN_BACKEND XENFS XEN_COMPAT_XENFS XEN_SYS_HYPERVISOR \
				XEN_XENBUS_FRONTEND XEN_GNTDEV XEN_GNTDEV_DMABUF XEN_GRANT_DEV_ALLOC \
				XEN_GRANT_DMA_ALLOC SWIOTLB_XEN XEN_TMEM XEN_PCIDEV_BACKEND \
				XEN_PVCALLS_FRONTEND XEN_PVCALLS_BACKEND XEN_SCSI_BACKEND XEN_PRIVCMD \
				XEN_ACPI_PROCESSOR XEN_MCE_LOG XEN_HAVE_PVMMU XEN_EFI XEN_AUTO_XLATE \
				XEN_ACPI XEN_SYMS XEN_HAVE_VPMU HYPERV HYPERV_TSCPAGE HYPERV_UTILS HYPERV_BALLOON \
				NUMA AMD_NUMA NODES_SPAN_OTHER_NODES NEED_MULTIPLE_NODES USE_PERCPU_NUMA_NODE_ID ACPI_NUMA
			nconfig NUMA_EMU XEN_DEBUG_FS
			mconfig KVM_INTEL KVM_AMD
			varconfig XEN_BALLOON_MEMORY_HOTPLUG_LIMIT 512
			varconfig NODES_SHIFT 6
			;;
		i486)
			yconfig M486 PCI BLK_DEV_SD ATA ATA_SFF ATA_BMDMA ATA_PIIX \
				E1000 SERIAL_8250 SERIAL_8250_CONSOLE RTC_CLASS \
				EFI EFI_STUB EFI_MIXED EFI_VARS FB_EFI EFI_RUNTIME_MAP EFIVAR_FS
			nconfig M586
			mconfig KVM_INTEL KVM_AMD
			;;
		ppc64le)
			yconfig POWER8_CPU TARGET_CPU_BOOL
			strconfig TARGET_CPU power8
			;;
		riscv64)
			yconfig RISCV_ISA_C RISCV_ISA_A FPU SIFIVE_PLIC
			;;
		riscv32)
			yconfig 32BIT ARCH_RV32I MAXPHYSMEM_2GB LBDAF GENERIC_ATOMIC64 \
				GENERIC_LIB_ASHLDI3 GENERIC_LIB_ASHRDI3 GENERIC_LIB_LSHRDI3 \
				GENERIC_LIB_UCMPDI2 GENERIC_LIB_UMODDI3 \
				RISCV_ISA_C RISCV_ISA_A FPU SIFIVE_PLIC
			nconfig ARCH_RV64I
			;;
	esac

	nconfig EMBEDDED MODULE_COMPRESS_GZIP KERNEL_GZIP KERNEL_BZIP2 KERNEL_LZMA KERNEL_LZO KERNEL_LZ4 \
		HZ_100 HZ_250 HZ_1000 CC_OPTIMIZE_FOR_PERFORMANCE PREEMPT_NONE PREEMPT_VOLUNTAR SCHED_DEBUG \
		COMPAT_VDSO FW_LOADER_USER_HELPER SYSFS_DEPRECATED

	# core
	yconfig EARLY_PRINTK BINFMT_ELF BINFMT_SCRIPT NO_HZ HIGH_RES_TIMERS HZ_300 PREEMPT CC_OPTIMIZE_FOR_SIZE \
		FRAMEBUFFER_CONSOLE_DEFERRED_TAKEOVER LOGO_LINUX_CLUT224 KERNEL_XZ \
		MODULES MODULE_FORCE_LOAD MODULE_UNLOAD MODULE_FORCE_UNLOAD MODULE_COMPRESS_XZ MODULE_SRCVERSION_ALL \
		HAVE_KERNEL_GZIP HAVE_KERNEL_BZIP2 HAVE_KERNEL_LZMA HAVE_KERNEL_XZ HAVE_KERNEL_LZO HAVE_KERNEL_LZ4 \
		RD_GZIP RD_BZIP2 RD_LZMA RD_XZ RD_LZO RD_LZ4 IKCONFIG IKPROC GPIO_SYSFS IKPRO DEVTMPFS TMPFS UNIX SHMEM \
		CGROUPS NAMESPACES IPC_NS NET_NS SYSVIP BINFMT_SCRIPT DEVTMPFS DEVTMPFS_MOUNT EXPERT \
		DMIID EPOLL FHANDLE FS_POSIX_ACL EXPORTFS FILE_LOCKING MANDATORY_FILE_LOCKING \
		FS_ENCRYPTION FSNOTIFY DNOTIFY INOTIFY_USER FANOTIFY GENERIC_ACL IPV6 NET NET_NS PROC_FS \
		PROC_KCORE PROC_SYSCTL PROC_PAGE_MONITOR PROC_DEVICETREE TIMER_STATS SECCOMP SECCOMP_FILTER \
		SIGNALFD SYSFS TIMERFD TMPFS_POSIX_ACL TMPFS_XATTR ANON_INODES BLOCK EVENTFD FSNOTIFY \
		INET NLATTR CGROUP_SCHED FAIR_GROUP_SCHED CFS_BANDWIDTH SCHEDSTATS PID_NS NET_NS SECCOMP_FILTER \
		USER_NS ADVISE_SYSCALLS I2C_CHARDEV PARTITION_ADVANCED EFI_PARTITION OSF_PARTITION \
		AMIGA_PARTITION SGI_PARTITION SUN_PARTITION KARMA_PARTITION MAC_PARTITION MAGIC_SYSRQ \
		AUTOFS4_FS BLK_DEV_BSG CGROUPS CHECKPOINT_RESTORE CMDLINE_BOOL SYSCTL \
		POSIX_MQUEUE POSIX_MQUEUE_SYSCTL KERNFS SYSFS CONFIGFS_FS MISC_FILESYSTEMS \
		NLS NLS_CODEPAGE_437 NLS_ASCII NLS_ISO8859_1 NLS_UTF8 INPUT INPUT_LEDS \
		INPUT_FF_MEMLESS INPUT_POLLDEV INPUT_EVDEV INPUT_KEYBOARD KEYBOARD_ATKBD \
		KEYBOARD_GPIO KEYBOARD_GPIO_POLLED INPUT_MOUSEDEV INPUT_MOUSE MOUSE_PS2 INPUT_MISC INPUT_UINPUT \
		SERIO HID HIDRAW UHID HID_GENERIC USB_HID USB_HIDDE KEYBOARD_IMX INPUT_TOUCHSCREEN TOUCHSCREEN_PROPERTIES \
		NEW_LEDS LEDS_CLASS VIRTUALIZATION IRQ_BYPASS_MANAGER KVM_GUEST

	# temp
	yconfig FB_VESA

	# core (modules)
	mconfig I2C_HID INPUT_GPIO_ROTARY_ENCODER INPUT_JOYDEV INPUT_POLLDEV INPUT_MATRIXKMAP KVM

	# block devs
	yconfig BLK_DEV BLK_DEV_INITRD BLK_DEV_SD BLK_DEV_SR CHR_DEV_SG BLK_DEV_LOOP BLK_DEV_RAM ATA_OVER_ETH \
		ATA PATA_ARTOP SATA_MV SATA_NV ATA_SFF ATA_ACPI SATA_PMP SATA_AHCI SATA_AHCI_PLATFORM \
		SATA_SIL24 ATA_SFF ATA_BMDMA ATA_PIIX SATA_DWC SATA_DWC_OLD_DMA SATA_NV \
		SATA_SIL SATA_SIS SATA_ULI SATA_VIA PATA_ALI PATA_AMD PATA_ATIIXP \
		PATA_JMICRON PATA_MARVELL PATA_SIS PATA_VIA PATA_ACPI ATA_GENERIC \
		PATA_PDC_OLD ATA_PIIX SATA_SIL SATA_SIL24 SATA_VIA MTD_BLOCK2MTD \
		DAX BLK_DEV_MD DM_DEBUG DM_UEVENT DM_DELAY DM_LOG_WRITES DM_MQ_DEFAULT \
		DM_MULTIPATH DM_ZERO DM_SNAPSHOT DM_LOG_USERSPACE MD BLK_DEV_DM DM_CRYPT \
		DM_MIRROR MD MD_AUTODETECT MD_LINEAR MD_RAID0 MD_RAID1 MD_RAID10 ASYNC_CORE \
		ASYNC_MEMCP ASYNC_XOR ASYNC_PQ ASYNC_RAID6_RECOV MD_RAID456 MD_MULTIPATH \
		SCSI SCSI_SAS_LIBSAS SCSI_SAS_ATTRS SCSI_SAS_ATA SCSI_SAS_HOST_SMP SCSI_SAS_LIBSAS_DEBUG \
		BLK_DEV_LOOP SCSI_MVSAS BLK_DEV_NBD SCSI BLK_DEV_SD CHR_DEV_SG BLK_DEV_SR CHR_DEV_ST \
		BLK_WBT BLK_WBT_SQ BLK_WBT_MQ IOSCHED_BFQ DM_THIN_PROVISIONING \
		SCSI_DMA SCSI_MULTI_LUN SCSI_SCAN_ASYNC SCSI_SAS_ATTRS SCSI_SAS_LIBSAS SCSI_SAS_ATA \
		SCSI_SAS_HOST_SMP SCSI_LOWLEVEL SCSI_MVSAS MEGARAID_SAS FIREWIRE_SBP2 RTS5208
	nconfig BLK_DEV_SR_VENDOR SCSI_MVSAS_TASKLET BLK_DEV_CRYPTOLOOP \
		MULTICORE_RAID456 ASYNC_RAID6_TEST MD_FAULTY SCSI_MVSAS_DEBUG PATA_LEGACY \
		ATA_VERBOSE_ERROR

	# crypto
	yconfig CRYPTO_HW CRYPTO_ANUBIS CRYPTO_BLOWFISH CRYPTO_CAMELLIA CRYPTO_CAST5 CRYPTO_CAST6 \
		CRYPTO_FCRYPT CRYPTO_KHAZAD CRYPTO_SERPENT CRYPTO_TEA CRYPTO_TGR192 CRYPTO_TWOFISH \
		CRYPTO_TWOFISH_COMMON CRYPTO_WP512 CRYPTO_AES CRYPTO_ACOMP2 CRYPTO_AEAD CRYPTO_AEAD2 \
		CRYPTO_AUTHENC CRYPTO_CBC CRYPTO_CCM CRYPTO_CMAC CRYPTO_CRC32 CRYPTO_CRC32C CRYPTO_CTR \
		CRYPTO_CTS CRYPTO_DEFLATE CRYPTO_DES CRYPTO_ECB CRYPTO_ECDH CRYPTO_ECHAINIV \
		CRYPTO_FCRYPT CRYPTO_GCM CRYPTO_XCBC CRYPTO_GF128MUL CRYPTO_GHASH CRYPTO_HASH \
		CRYPTO_HMAC CRYPTO_DEV_CCP CRYPTO_DEV_CCP_CRYPTO CRYPTO_DEV_CCP_DD CRYPTO_DEV_SP_CCP \
		CRYPTO_DEV_GEODE CRYPTO_DEV_HIFN_795X CRYPTO_DEV_HIFN_795X_RNG CRYPTO_DEV_PADLOCK \
		CRYPTO_DEV_PADLOCK_AES CRYPTO_DEV_PADLOCK_SHA CRYPTO_DEV_TALITOS CRYPTO_DEV_TALITOS1 \
		CRYPTO_DEV_TALITOS2 CRYPTO_KPP CRYPTO_MANAGER CRYPTO_MANAGER2 CRYPTO_MD4 CRYPTO_MD5 \
		CRYPTO_MD5_OCTEON CRYPTO_MICHAEL_MIC CRYPTO_PCBC CRYPTO_PCOMP CRYPTO_PCOMP2 \
		CRYPTO_RSA CRYPTO_RMD160 CRYPTO_DRBG CRYPTO_DRBG_HMAC CRYPTO_DRBG_MENU \
		CRYPTO_JITTERENTROPY CRYPTO_RNG2 CRYPTO_SHA1 CRYPTO_SHA1_OCTEON CRYPTO_SHA1_SSSE3 \
		ONFIG_CRYPTO_SHA256 CRYPTO_SHA256_OCTEON CRYPTO_SHA256_SSSE3 CRYPTO_SHA512 CRYPTO_SHA512_OCTEON \
		CRYPTO_SHA512_SSSE3 CRYPTO_USER_API CRYPTO_USER_API_HASH CRYPTO_USER_API_SKCIPHER CRYPTO_XTS \
		CRYPTO_CAMELLIA_X86_64 CRYPTO_BLOWFISH_X86_64 CRYPTO_TWOFISH_X86_64 \
		CRYPTO_TWOFISH_X86_64_3WAY CRYPTO_SERPENT_SSE2_X86_64 CRYPTO_CAMELLIA_AESNI_AVX_X86_64 \
		CRYPTO_CAST5_AVX_X86_64 CRYPTO_CAST6_AVX_X86_64 CRYPTO_TWOFISH_AVX_X86_64 \
		CRYPTO_SERPENT_AVX_X86_64 CRYPTO_CAMELLIA_AESNI_AVX2_X86_64 CRYPTO_SERPENT_AVX2_X86_64 \
		CRYPTO_SERPENT_SSE2_586 CRYPTO_AES_X86_64 CRYPTO_TWOFISH_586
	nconfig CRYPTO_DRBG_HASH

	# usb
	yconfig SCSI_DMA SCSI_MULTI_LUN USB_STORAGE USB_UAS USB_SUPPORT USB_COMMON USB_ARCH_HAS_HCD USB USB_ANNOUNCE_NEW_DEVICES \
		USB_XHCI_HCD USB_XHCI_PCI USB_EHCI_HCD USB_EHCI_ROOT_HUB_TT USB_EHCI_TT_NEWSCHED USB_EHCI_PCI USB_OHCI_HCD USB_OHCI_HCD_PCI USB_UHCI_HCD \
		USB_DWCOTG USB_PHY USB_MXS_PHY AMLOGIC_USB USB_DWC_OTG_HCD USB_HOST_ELECT_TEST

	# filesystems
	yconfig SQUASHFS SQUASHFS_DECOMP_MULTI SQUASHFS_FILE_DIRECT \
		SQUASHFS_LZ4 SQUASHFS_LZO SQUASHFS_XATTR SQUASHFS_XZ SQUASHFS_ZLIB SQUASHFS_ZSTD \
		OVERLAY_FS OVERLAY_FS_REDIRECT_DIR _OVERLAY_FS_INDEX OVERLAY_FS_REDIRECT_ALWAYS_FOLLOW \
		OVERLAY_FS_NFS_EXPORT OVERLAY_FS_XINO_AUTO VERLAY_FS_METACOPY \
		EXT4_FS EXT4_USE_FOR_EXT2 EXT4_FS_POSIX_ACL EXT4_FS_SECURITY EXT4_USE_FOR_EXT2 \
		FAT_FS VFAT_FS FAT_DEFAULT_UTF8 JBD2 FS_MBCACHE UBIFS_FS UBIFS_FS_LZO UBIFS_FS_ZLIB \
		BTRFS_FS BTRFS_FS_POSIX_ACL BTRFS_FS_CHECK_INTEGRITY REISERFS_FS REISERFS_FS_XATTR JFS_FS JFS_SECURITY \
		XFS_FS XFS_QUOTA CRYPTO_LZ4 CRYPTO_LZ4HC \
		F2FS_FS F2FS_FS_XATTR F2FS_FS_POSIX_ACL F2FS_FS_SECURITY F2FS_STAT_FS F2FS_CHECK_FS ISO9660_FS JOLIET ZISOFS \
		UDF_FS UDF_NLS MISC_FILESYSTEMS HFS_FS HFSPLUS_FS 9P_FS 9P_FS_POSIX_ACL 9P_FS_SECURITY 9P_FSCACHE
	nconfig SQUASHFS_FILE_CACHE SQUASHFS_DECOMP_SINGLE SQUASHFS_DECOMP_MULTI_PERCPU SQUASHFS_4K_DEVBLK_SIZE SQUASHFS_EMBEDDED
	mconfig DMI_SYSFS FUSE_FS

	# hid
	yconfig HID_A4TECH HID_APPLE HID_AUREAL HID_BELKIN HID_CHERRY HID_CHICONY HID_CYPRESS \
		DRAGONRISE_FF HID_EZKEY HID_HBGIC HID_KYE HID_GYRATION HID_TWINHAN HID_KENSINGTON HID_LCPOWER \
		HID_LENOVO HID_LOGITECH HID_LOGITECH_DJ HID_LOGITECH_HIDPP LOGITECH_FF LOGIRUMBLEPAD2_FF \
		LOGIG940_FF LOGIWHEELS_FF HID_MICROSOFT HID_MONTEREY HID_ORTEK HID_OUYA HID_PANTHERLORD \
		PANTHERLORD_FF HID_PENMOUNT HID_PETALYNX HID_PICOLCD_FB HID_PICOLCD_BACKLIGHT HID_PICOLCD_LCD \
		HID_PICOLCD_LEDS HID_SAMSUNG HID_SONY SONY_FF HID_SPINELPLUS HID_SUNPLUS HID_RMI SMARTJOYPLUS_FF \
		HID_TIVO HID_TOPSEED HID_WIIMOTE_EXT HID_XINMO HID_ZYDACRON INTEL_ISH_HID
	mconfig HID_DRAGONRISE HID_LENOVO_TPKBD HID_PICOLCD HID_PS3REMOTE HID_SMARTJOYPLUS HID_WIIMOTE

	# virtio
	yconfig DRM_VIRTIO_GPU NET_9P NET_9P_VIRTIO RPMSG_VIRTIO VIRTIO_BALLOON \
		VIRTIO_CONSOLE VIRTIO_INPUT VIRTIO_MENU VIRTIO_MMIO VIRTIO_MMIO_CMDLINE_DEVICES \
		VIRTIO_NET VIRTIO_VSOCKETS VIRTIO_BLK VIRTIO_PCI VIRTIO_PCI_LEGACY

	strconfig DEFAULT_HOSTNAME yui
	strconfig UEVENT_HELPER_PATH ""
	strconfig NLS_DEFAULT "utf8"
	strconfig FAT_DEFAULT_IOCHARSET "ascii"
	varconfig FAT_DEFAULT_CODEPAGE 437
	varconfig HZ 300
	varconfig BLK_DEV_LOOP_MIN_COUNT 0
	varconfig SND_HDA_PREALLOC_SIZE 2048

	if [ "$CROSS" = "yes" ]; then
		yes '' | make ARCH=$XKARCH CROSS_COMPILE=${CROSS_COMPILE} olddefconfig
	else
		yes '' | make ARCH=$XKARCH olddefconfig
	fi
}

build() {
	case $BARCH in
		x86_64)
			export XKARCH="x86_64"
			export IMAGELOC="arch/x86/boot/bzImage"
			;;
		i486)
			export XKARCH="i386"
			export IMAGELOC="arch/x86/boot/bzImage"
			;;
		ppc64le|ppc64|ppc)
			export XKARCH="powerpc"
			export IMAGELOC="vmlinux"
			;;
		riscv64|riscv32)
			export XKARCH="riscv"
			export IMAGELOC="vmlinux"
			;;
		*)
			echo "Architecture is not set or is not supported by Ataraxia Linux"
			exit 1
	esac

	cd "$SRC"/$name-$version
	patch -Np1 -i "$STUFF"/linux/wireguard.patch

	unset LDFLAGS
	make mrproper


	if [ "$CROSS" != "yes" ]; then
		if [ -f /boot/config-linux ]; then
			cp /boot/config-linux .config
		else
			generate_config
		fi
	else
		generate_config
	fi

	if [ "$CROSS" = "yes" ]; then
		make ARCH=$XKARCH CROSS_COMPILE=${CROSS_COMPILE}
	else
		make ARCH=$XKARCH
	fi

	if [ "$CROSS" = "yes" ]; then
		make ARCH=$XKARCH CROSS_COMPILE=${CROSS_COMPILE} INSTALL_MOD_PATH="$PKG"/usr modules_install
	else
		make ARCH=$XKARCH INSTALL_MOD_PATH="$PKG"/usr modules_install
	fi

	mkdir -p "$PKG"/boot
	cp "$IMAGELOC" "$PKG"/boot/vmlinuz-linux
	cp .config "$PKG"/boot/config-linux
}
