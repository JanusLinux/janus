#!/bin/bash

set -e

msg() {
	local msg=$(echo $1 | tr -s / /)
	printf "\e[1m\e[32m==>\e[0m $msg\n"
}

adjust_toolchain() {
	msg "Please, wait..."
	sleep 1

	mv /tools/bin/ld /tools/bin/ld-old
	mv /tools/$(cc -dumpmachine)/bin/ld /tools/$(cc -dumpmachine)/bin/ld-old
	mv /tools/bin/ld-new /tools/bin/ld
	ln -sf /tools/bin/ld /tools/$(cc -dumpmachine)/bin/ld

	rm -rf /tools/bin/ld-old
	rm -rf /tools/$(cc -dumpmachine)/bin/ld-old

	gcc -dumpspecs | sed -e 's@/tools@@g' \
		-e '/\*startfile_prefix_spec:/{n;s@.*@/usr/lib/ @}' \
		-e '/\*cpp:/{n;s@$@ -isystem /usr/include@}' > \
		`dirname $(gcc --print-libgcc-file-name)`/specs

	msg "Toolchain adjust is done"
}

pkgstagetwo() {
	local pkg="$@"
	for emergepkg in $pkg; do
		msg "Emerging '"$emergepkg"' package"
		local unemergechrootpkg="$(pacman -Q | cut -f 1 -d " " | grep "chroot-$emergepkg")"
		cd /storage/repository/$emergepkg
		if [ ! -f /storage/packages/$emergepkg-*.pkg.tar.xz ]; then
			makepkg --config /storage/makepkg.conf -dd -c -C
		fi
		if [ ! -z "$unemergechrootpkg" ]; then
			pacman -R $unemergechrootpkg -dd --noconfirm
		fi
		pacman -U /storage/packages/$emergepkg-*.pkg.tar.xz --noconfirm --needed --arch $BARCH
	done
}


pkgstagetwob() {
	local pkg="$@"
	for emergepkg in $pkg; do
		msg "Emerging '"$emergepkg"' package"
		cd /storage/repository/$emergepkg
		rm -rf /storage/packages/$emergepkg-*.pkg.tar.xz
		makepkg --config /storage/makepkg.conf -dd -c -C -f
		pacman -U /storage/packages/$emergepkg-*.pkg.tar.xz -dd --noconfirm --needed --arch $BARCH
	done
}

pkgstagetwoc() {
	local pkg="$@"
	for emergepkg in $pkg; do
		msg "Emerging '"$emergepkg"' package"
		local unemergechrootpkg="$(pacman -Q | cut -f 1 -d " " | grep "chroot-$emergepkg")"
		cd /storage/repository/$emergepkg
		if [ ! -f /storage/packages/$emergepkg-*.pkg.tar.xz ]; then
			makepkg --config /storage/makepkg.conf -dd -c -C
		fi
		if [ ! -z "$unemergechrootpkg" ]; then
			pacman -R $unemergechrootpkg -dd --noconfirm
		fi
		pacman -U /storage/packages/$emergepkg-*.pkg.tar.xz -dd --noconfirm --needed --arch $BARCH
	done
}

pkgstagebuildonly() {
	local pkg="$@"
	for emergepkg in $pkg; do
		msg "Emerging '"$emergepkg"' package"
		cd /storage/repository/$emergepkg
		if [ ! -f /storage/packages/$emergepkg-*.pkg.tar.xz ]; then
			makepkg --config /storage/makepkg.conf -dd -c -C
		fi
	done
}

pkgstageinstallonly() {
	local pkg="$@"
	for emergepkg in $pkg; do
		msg "Emerging '"$emergepkg"' package"
		if [ -f /storage/packages/$emergepkg-*.pkg.tar.xz ]; then
			pacman -U /storage/packages/$emergepkg-*.pkg.tar.xz --noconfirm --needed --arch $BARCH
		fi
	done
}

pkgbsp() {
	local pkg="$@"
	for emergepkg in $pkg; do
		msg "Emerging '"$emergepkg"' package"
		local unemergechrootpkg="$(pacman -Q | cut -f 1 -d " " | grep "chroot-$emergepkg")"
		cd /storage/bsp/$emergepkg
		if [ ! -f /storage/packages/$emergepkg-*.pkg.tar.xz ]; then
			makepkg --config /storage/makepkg.conf -dd -c -C
		fi
		if [ ! -z "$unemergechrootpkg" ]; then
			pacman -R $unemergechrootpkg -dd --noconfirm
		fi
		pacman -U /storage/packages/$emergepkg-*.pkg.tar.xz --noconfirm --needed --arch $BARCH
	done
}

pkgstageremove() {
	local pkg="$@"
	for emergepkg in $pkg; do
		msg "Unemerging '"$emergepkg"' package"
		local unemergechrootpkg="$(pacman -Q | cut -f 1 -d " " | grep "$emergepkg")"
		if [ ! -z "$unemergechrootpkg" ]; then
			pacman -R $unemergechrootpkg -dd --noconfirm
		fi
	done
}

for package in linux-api-headers fortify-headers musl musl-tools libz file netbsd-curses libedit \
		m4 byacc bison flex bc gmp mpfr mpc binutils gcc sqlite tcl expect dejagnu ccache libatomic_ops \
		gc bzip2 pkgconf attr acl libcap ed pcre pcre2 popt bash \
		bash-completion dash gdbm zsh mksh tcsh loksh which libtool db gperf expat \
		perl perl-xml-parser intltool openssl autoconf automake autoconf2.13 autoconf-archive \
		fish xz lz4 lzip lzo p7zip unrar unzip zip zstd libarchive; do
	case $package in
		musl)
			pkgstagetwo musl
			adjust_toolchain
			;;
		bash)
			pkgstagebuildonly bash
			;;
		autoconf)
			pkgstagetwod autoconf
			;;
		autoconf2.13)
			pkgstagetwod autoconf2.13
			;;
		*)
			pkgstagetwo $package
	esac
done

exit 0
