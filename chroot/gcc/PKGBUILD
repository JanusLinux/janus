pkgname=chroot-gcc
pkgver=8+20190111
gccver=8.2.1
gmpver=6.1.2
mpfrver=4.0.1
mpcver=1.1.0
islver=0.20
pkgrel=1
arch=('x86_64' 'x86' 'arm64' 'armv7l' 'armv5tel' 'ppc64le' 'ppc64' 'ppc')
options=('!emptydirs')
provides=('gcc-runtime')
source=(ftp://ftp.gwdg.de/pub/misc/gcc/snapshots/${pkgver/+/-}/gcc-${pkgver/+/-}.tar.xz
	http://ftp.gnu.org/gnu/gmp/gmp-$gmpver.tar.xz
	http://ftp.gnu.org/gnu/mpfr/mpfr-$mpfrver.tar.xz
	http://ftp.gnu.org/gnu/mpc/mpc-$mpcver.tar.gz
	http://isl.gforge.inria.fr/isl-$islver.tar.xz
	0001-gcc-Ensure-SSP-is-always-present.patch
	002_all_default-relro.patch
	003_all_default-fortify-source.patch
	005_all_default-as-needed.patch
	gcc-as-needed-gold.patch
	gcc-as-needed-push-pop.patch
	011_all_default-warn-format-security.patch
	012_all_default-warn-trampolines.patch
	013_all_default-ssp-fix.patch
	020_all_msgfmt-libstdc++-link.patch
	050_all_libiberty-asprintf.patch
	051_all_libiberty-pic.patch
	053_all_libitm-no-fortify-source.patch
	090_all_pr55930-dependency-tracking.patch
	0003-gcc-poison-system-directories.patch
	gcc-4.9-musl-fortify.patch
	gcc-6.1-musl-libssp.patch
	libgcc-always-build-gcceh.a.patch
	cpu_indicator.patch
	0002-posix_memalign.patch
	0003-libatomic-test-fix.patch
	0004-libgomp-test-fix.patch
	0005-libitm-test-fix.patch
	0006-libvtv-test-fix.patch
	0007-j2.patch
	0008-s390x-muslldso.patch
	0009-microblaze-pr65649.patch
	0010-ldbl128-config.patch
	0011-m68k.patch
	0012-static-pie.patch
	gcc-pure64.patch
	gcc-pure64-mips.patch)

prepare() {
	cd "$srcdir"/gcc-${pkgver/+/-}
	sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

	patch -Np1 -i "$srcdir"/0001-gcc-Ensure-SSP-is-always-present.patch
	patch -Np1 -i "$srcdir"/002_all_default-relro.patch
	patch -Np1 -i "$srcdir"/003_all_default-fortify-source.patch
	patch -Np1 -i "$srcdir"/005_all_default-as-needed.patch
	patch -Np1 -i "$srcdir"/gcc-as-needed-gold.patch
	patch -Np1 -i "$srcdir"/gcc-as-needed-push-pop.patch
	patch -Np1 -i "$srcdir"/011_all_default-warn-format-security.patch
	patch -Np1 -i "$srcdir"/012_all_default-warn-trampolines.patch
	patch -Np1 -i "$srcdir"/013_all_default-ssp-fix.patch
	patch -Np1 -i "$srcdir"/020_all_msgfmt-libstdc++-link.patch
	patch -Np1 -i "$srcdir"/050_all_libiberty-asprintf.patch
	patch -Np1 -i "$srcdir"/051_all_libiberty-pic.patch
	patch -Np1 -i "$srcdir"/053_all_libitm-no-fortify-source.patch
	patch -Np1 -i "$srcdir"/090_all_pr55930-dependency-tracking.patch
	patch -Np1 -i "$srcdir"/0003-gcc-poison-system-directories.patch
	patch -Np1 -i "$srcdir"/gcc-4.9-musl-fortify.patch
	patch -Np1 -i "$srcdir"/gcc-6.1-musl-libssp.patch
	patch -Np1 -i "$srcdir"/libgcc-always-build-gcceh.a.patch
	patch -Np1 -i "$srcdir"/cpu_indicator.patch
	patch -Np1 -i "$srcdir"/0002-posix_memalign.patch
	patch -Np1 -i "$srcdir"/0003-libatomic-test-fix.patch
	patch -Np1 -i "$srcdir"/0004-libgomp-test-fix.patch
	patch -Np1 -i "$srcdir"/0005-libitm-test-fix.patch
	patch -Np1 -i "$srcdir"/0006-libvtv-test-fix.patch
	patch -Np1 -i "$srcdir"/0007-j2.patch
	patch -Np1 -i "$srcdir"/0008-s390x-muslldso.patch
	patch -Np1 -i "$srcdir"/0009-microblaze-pr65649.patch
	patch -Np1 -i "$srcdir"/0010-ldbl128-config.patch
	patch -Np1 -i "$srcdir"/0011-m68k.patch
	patch -Np1 -i "$srcdir"/0012-static-pie.patch
	patch -Np1 -i "$srcdir"/gcc-pure64.patch
	patch -Np1 -i "$srcdir"/gcc-pure64-mips.patch

	for file in  gcc/config/linux.h gcc/config/i386/linux.h gcc/config/i386/linux64.h \
			gcc/config/aarch64/aarch64-linux.h \
			gcc/config/arm/linux-eabi.h gcc/config/arm/linux-elf.h \
			gcc/config/mips/linux.h \
			gcc/config/rs6000/linux64.h gcc/config/rs6000/sysv4.h; do
		cp -u $file{,.orig}
		sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
			-e 's@/usr@/tools@g' $file.orig > $file
		echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
		touch $file.orig
	done

	mv ../gmp-$gmpver gmp
	mv ../mpfr-$mpfrver mpfr
	mv ../mpc-$mpcver mpc
	mv ../isl-$islver isl

	mkdir build
}

build() {
	export CFLAGS_FOR_BUILD=" "
	export FFLAGS_FOR_BUILD=" "
	export CXXFLAGS_FOR_BUILD=" "
	export LDFLAGS_FOR_BUILD=" "
	export CFLAGS_FOR_TARGET=" "
	export FFLAGS_FOR_TARGET=" "
	export CXXFLAGS_FOR_TARGET=" "
	export LDFLAGS_FOR_TARGET=" "

	cd "$srcdir"/gcc-${pkgver/+/-}
	cd build
	../configure \
		--prefix=/tools \
		--libdir=/tools/lib \
		--libexecdir=/tools/lib \
		--build=$XHOST \
		--host=$XTARGET \
		--target=$XTARGET $GCCOPTS \
		--with-local-prefix=/tools \
		--with-native-system-header-dir=/tools/include \
		--with-isl \
		--with-system-zlib \
		--enable-__cxa_atexit \
		--enable-checking=release \
		--enable-clocale=generic \
		--enable-default-pie \
		--enable-default-ssp \
		--enable-install-libiberty \
		--enable-languages=c,c++,lto \
		--enable-libstdcxx-time \
		--enable-linker-build-id \
		--enable-lto \
		--enable-shared \
		--enable-threads=posix \
		--enable-tls \
		--disable-bootstrap \
		--disable-gnu-indirect-function \
		--disable-libmpx \
		--disable-libmudflap \
		--disable-libsanitizer \
		--disable-libssp \
		--disable-libstdcxx-pch \
		--disable-multilib \
		--disable-nls \
		--disable-symvers \
		--disable-werror \
		libat_cv_have_ifunc=no
	make AS_FOR_TARGET="$AS" LD_FOR_TARGET="$LD"
}

package() {
	cd "$srcdir"/gcc-${pkgver/+/-}
	cd build
	make -j1 DESTDIR="$pkgdir" install

	ln -sf gcc "$pkgdir"/tools/bin/cc

	ln -sf ../bin/cpp "$pkgdir"/tools/lib

	install -dm755 "$pkgdir"/tools/lib/bfd-plugins
	ln -sf /tools/lib/gcc/$XTARGET/$gccver/liblto_plugin.so "$pkgdir"/tools/lib/bfd-plugins/
}
