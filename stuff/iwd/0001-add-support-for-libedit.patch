From 0d4817de49fc9471be3dc57ed5f8736c40a9d25d Mon Sep 17 00:00:00 2001
From: Ishimoto Shinobu <nagakamira@gmail.com>
Date: Sat, 20 Feb 2021 21:24:58 +0900
Subject: [PATCH 1/2] add support for libedit

Signed-off-by: Ishimoto Shinobu <nagakamira@gmail.com>
---
 client/command.c |  2 ++
 client/display.c | 44 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 46 insertions(+)

diff --git a/client/command.c b/client/command.c
index 74f11c4..b5d1e12 100644
--- a/client/command.c
+++ b/client/command.c
@@ -323,6 +323,7 @@ char **command_completion(const char *text, int start, int end)
 		goto done;
 	}
 
+#ifdef rl_copy_text
 	prompt = rl_copy_text(0, rl_end);
 
 	family = strtok_r(prompt, " ", &args);
@@ -338,6 +339,7 @@ char **command_completion(const char *text, int start, int end)
 
 	matches = cmd_completion_match_family_cmd(family, args, text,
 							ends_with_space);
+#endif
 
 done:
 	l_free(prompt);
diff --git a/client/display.c b/client/display.c
index 07cb7bd..fc90672 100644
--- a/client/display.c
+++ b/client/display.c
@@ -71,15 +71,23 @@ static struct saved_input *save_input(void)
 {
 	struct saved_input *input;
 
+#ifdef RL_STATE_DONE
 	if (RL_ISSTATE(RL_STATE_DONE))
 		return NULL;
+#endif
 
 	input = l_new(struct saved_input, 1);
 
 	input->point = rl_point;
+#ifdef rl_copy_text
 	input->line = rl_copy_text(0, rl_end);
+#endif
+#ifdef rl_save_prompt
 	rl_save_prompt();
+#endif
+#ifdef rl_replace_line
 	rl_replace_line("", 0);
+#endif
 	rl_redisplay();
 
 	return input;
@@ -90,8 +98,12 @@ static void restore_input(struct saved_input *input)
 	if (!input)
 		return;
 
+#ifdef rl_restore_prompt
 	rl_restore_prompt();
+#endif
+#ifdef rl_replace_line
 	rl_replace_line(input->line, 0);
+#endif
 	rl_point = input->point;
 	rl_forced_update_display();
 
@@ -401,7 +413,11 @@ static void display_completion_matches(char **matches, int num_matches,
 	char line[LINE_LEN];
 	size_t index;
 	size_t line_used;
+#ifdef rl_copy_text
 	char *input = rl_copy_text(0, rl_end);
+#else
+	char *input;
+#endif
 
 	prompt = l_strdup_printf("%s%s\n", IWD_PROMPT, input);
 	l_free(input);
@@ -568,7 +584,9 @@ void display_enable_cmd_prompt(void)
 	l_io_set_read_handler(io, read_handler, NULL, NULL);
 	l_io_set_disconnect_handler(io, disconnect_callback, NULL, NULL);
 
+#ifdef rl_set_prompt
 	rl_set_prompt(IWD_PROMPT);
+#endif
 
 	/*
 	 * The following sequence of rl_* commands forces readline to properly
@@ -576,7 +594,9 @@ void display_enable_cmd_prompt(void)
 	 */
 	rl_save_prompt();
 	rl_redisplay();
+#ifdef rl_restore_prompt
 	rl_restore_prompt();
+#endif
 	rl_forced_update_display();
 }
 
@@ -610,12 +630,18 @@ void display_agent_prompt(const char *label, bool mask_input)
 		agent_saved_input = l_new(struct saved_input, 1);
 
 		agent_saved_input->point = rl_point;
+#ifdef rl_copy_text
 		agent_saved_input->line = rl_copy_text(0, rl_end);
+#endif
 		rl_set_prompt("");
+#ifdef rl_replace_line
 		rl_replace_line("", 0);
+#endif
 		rl_redisplay();
 
+#ifdef rl_erase_empty_line
 		rl_erase_empty_line = 0;
+#endif
 		rl_set_prompt(prompt);
 	} else {
 		rl_callback_handler_install(prompt, readline_callback);
@@ -643,6 +669,7 @@ void display_agent_prompt_release(const char *label)
 	if (!agent_saved_input)
 		return;
 
+#if 0
 	if (display_refresh.cmd) {
 		char *text = rl_copy_text(0, rl_end);
 		char *prompt = l_strdup_printf(COLOR_BLUE "%s " COLOR_OFF
@@ -652,11 +679,16 @@ void display_agent_prompt_release(const char *label)
 		l_queue_push_tail(display_refresh.redo_entries, prompt);
 		display_refresh.undo_lines++;
 	}
+#endif
 
+#ifdef rl_erase_empty_line
 	rl_erase_empty_line = 1;
+#endif
 
+#if 0
 	rl_replace_line(agent_saved_input->line, 0);
 	rl_point = agent_saved_input->point;
+#endif
 
 	l_free(agent_saved_input->line);
 	l_free(agent_saved_input);
@@ -665,6 +697,14 @@ void display_agent_prompt_release(const char *label)
 	rl_set_prompt(IWD_PROMPT);
 }
 
+#ifndef rl_crlf
+static int rl_crlf(void) {
+    if (rl_outstream != NULL)
+        putc('\n', rl_outstream);
+    return 0;
+}
+#endif
+
 void display_quit(void)
 {
 	rl_crlf();
@@ -722,10 +762,14 @@ void display_init(void)
 									NULL);
 
 	rl_attempted_completion_function = command_completion;
+#ifdef rl_completion_display_matches_hook
 	rl_completion_display_matches_hook = display_completion_matches;
+#endif
 
 	rl_completer_quote_characters = "\"";
+#ifdef rl_erase_empty_line
 	rl_erase_empty_line = 1;
+#endif
 	rl_callback_handler_install("Waiting for IWD to start...",
 							readline_callback);
 
-- 
2.29.2

