From 65470da54b5216e582c6fdeb20ca26f64486f1fc Mon Sep 17 00:00:00 2001
From: Ishimoto Shinobu <nagakamira@gmail.com>
Date: Tue, 23 Feb 2021 00:14:39 +0900
Subject: [PATCH 5/5] support NVMe support

Signed-off-by: Ishimoto Shinobu <nagakamira@gmail.com>
---
 src/common.h   |  2 +-
 src/geometry.c | 22 +++++++++++++++++++++-
 src/lilo.h     |  1 +
 3 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/src/common.h b/src/common.h
index 29bbaec..4f0425a 100644
--- a/src/common.h
+++ b/src/common.h
@@ -386,7 +386,7 @@ extern char *config_file;
 extern FILE *errstd;
 extern FILE *pp_fd;
 extern char *identify;	/* in identify.c */
-extern int dm_major_list[16];
+extern int dm_major_list[32];
 extern int dm_major_nr;
 
 #define crc(a,b) (~crc32((a),(b),CRC_POLY1))
diff --git a/src/geometry.c b/src/geometry.c
index 196a892..c7ac9a8 100644
--- a/src/geometry.c
+++ b/src/geometry.c
@@ -84,8 +84,9 @@ DM_TABLE *dmtab = NULL;
 int dm_version_nr = 0;
 #endif
 
-int dm_major_list[16];
+int dm_major_list[32]; /* increased from 16 to allow for nvme disks  */
 int dm_major_nr;
+int nvme_pr = 0; /* set to none zero after geo_init if nvme disk present */
 
 #ifdef LCF_LVM
 struct lv_bmap {
@@ -200,6 +201,9 @@ void geo_init(char *name)
 
     while(fgets(line, (sizeof line)-1, file)) {
 	if (sscanf(line, "%d %31s\n", &major, major_name) != 2) continue;
+	if (strcmp(major_name, "nvme") !=0) {  /* set if nvme drive is present */
+		nvme_pr=-1;
+	}
 	if (strcmp(major_name, "device-mapper") != 0) continue;
 	dm_major_list[dm_major_nr] = major;
 	if (verbose >= 3) {
@@ -708,6 +712,22 @@ void geo_query_dev(GEOMETRY *geo,int device,int all)
 	    geo->start = hdprm.start;
 	    break;
 	case MAJOR_SATA1:
+	    /* check for nvme device and assume boot/this device is nvme if present */
+	    if (nvme_pr != 0) {
+	    geo->device = 0x80 + last_dev(MAJOR_IDE,64) + (MINOR(device) >> 4);
+	    if (!get_all) break;
+	    if (ioctl(fd,HDIO_GETGEO,&hdprm) < 0)
+		die("geo_query_dev HDIO_GETGEO (dev 0x%04x): %s",device,
+		  strerror(errno));
+	    if (all && !hdprm.sectors)
+		die("HDIO_REQ not supported for your NVME controller. Please "
+		  "use a DISK section");
+	    geo->heads = hdprm.heads;
+	    geo->cylinders = hdprm.cylinders;
+	    geo->sectors = hdprm.sectors;
+	    geo->start = hdprm.start;
+	    break;
+    	}
 	case MAJOR_SATA2:
 		printf("WARNING: SATA partition in the high region (>15):\n");
 		printf("LILO needs the kernel in one of the first 15 SATA partitions. If \n");
diff --git a/src/lilo.h b/src/lilo.h
index e3d6e93..fe7b780 100644
--- a/src/lilo.h
+++ b/src/lilo.h
@@ -245,6 +245,7 @@
 
 /* high partitions (>15) on SATA hard disks */
 #define MAJOR_SATA1    259    /* high SATA disk partitions (Block Extended Major) */
+                              /* also used by kernel for nvme disks */
 #define MAJOR_SATA2    260    /* high SATA disk partitions (Block Extended Major) (obsolete) */
 
 
-- 
2.29.2

