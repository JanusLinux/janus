#!/usr/bin/env sh
#
# Linux kernel configuration script
#

yconfig() {
	while [ $# -ne 0 ]; do
		./scripts/config --enable $1
		shift 1
	done
}

nconfig() {
	while [ $# -ne 0 ]; do
		./scripts/config --disable $1
		shift 1
	done
}

varconfig() {
	FUONE="$1"
	FUTWO="$2"

	./scripts/config --set-val "$FUONE" "$FUTWO"
}

strconfig() {
	FUONE="$1"
	FUTWO="$2"

	./scripts/config --set-str "$FUONE" "$FUTWO"
}

main() {
	local arch flavor defconfig karch

	while getopts a:f: opts; do
		case $opts in
			a) arch="$OPTARG" ;;
			f) flavor="$OPTARG" ;;
		esac
	done
	shift $((OPTIND - 1))

	case $arch in
		x86_64) defconfig="x86_64_defconfig" ;;
		x86) defconfig="i386_defconfig" ;;
		arm64)
			case $flavor in
				rpi4) defconfig="bcm2711_defconfig" ;;
				rpi3) defconfig="bcmrpi3_defconfig" ;;
				*) defconfig="defconfig" ;;
			esac
			;;
		arm)
			case $flavor in
				rpi2) defconfig="bcm2709_defconfig" ;;
				*) defconfig="vexpress_defconfig" ;;
			esac
			;;
		mips64|mips64el|mips|mipsel) defconfig="malta_defconfig" ;;
		ppc64le) defconfig="pseries_le_defconfig" ;;
		ppc64)
			case $flavor in
				g5) defconfig="g5_defconfig" ;;
				ps3) defconfig="ps3_defconfig" ;;
				*) defconfig="pseries_defconfig" ;;
			esac
			;;
		riscv64) defconfig="defconfig" ;;
		*) echo "Architecture is not set or is not supported by Ataraxia GNU/Linux"; exit 1 ;;
	esac

	case $arch in
		x86_64) karch="x86_64" ;;
		x86) karch="i386" ;;
		arm64) karch="arm64" ;;
		arm) karch="arm" ;;
		mips64|mips64el|mips|mipsel) karch="mips" ;;
		ppc64le|ppc64) karch="powerpc" ;;
		riscv64) karch="riscv" ;;
		*) echo "Architecture is not set or is not supported by Ataraxia GNU/Linux"; exit 1 ;;
	esac

	make ARCH=$karch CC=${CROSS_COMPILE}clang $defconfig

	nconfig MODULES

	sed -i 's/=m/=y/g' .config

	yes '' | make ARCH=$karch CC=${CROSS_COMPILE}clang oldconfig
}

main "$@"

