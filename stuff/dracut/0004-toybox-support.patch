From ec9e2362e33a13484a98c418a71f4a154a4f0328 Mon Sep 17 00:00:00 2001
From: Ishimoto Shinobu <nagakamira@gmail.com>
Date: Fri, 15 Jan 2021 16:49:46 +0900
Subject: [PATCH 4/4] toybox support

Signed-off-by: Ishimoto Shinobu <nagakamira@gmail.com>
---
 50-dracut.install                    |  2 +-
 51-dracut-rescue.install             |  2 +-
 Makefile                             |  2 +-
 dracut-init.sh                       |  4 ++--
 dracut.sh                            |  4 ++--
 install/dracut-install.c             |  8 +++----
 modules.d/05toybox/module-setup.sh   | 32 ++++++++++++++++++++++++++++
 modules.d/10i18n/module-setup.sh     |  2 +-
 modules.d/95terminfo/module-setup.sh |  2 +-
 9 files changed, 45 insertions(+), 13 deletions(-)
 create mode 100755 modules.d/05toybox/module-setup.sh

diff --git a/50-dracut.install b/50-dracut.install
index 7ea5e17..3112d9e 100755
--- a/50-dracut.install
+++ b/50-dracut.install
@@ -25,7 +25,7 @@ case "$COMMAND" in
         if [[ -f ${INITRD_IMAGE_PREGENERATED} ]]; then
             # we found an initrd at the same place as the kernel
             # use this and don't generate a new one
-            cp --reflink=auto "$INITRD_IMAGE_PREGENERATED" "$BOOT_DIR_ABS/$INITRD" \
+            cp "$INITRD_IMAGE_PREGENERATED" "$BOOT_DIR_ABS/$INITRD" \
                 && chown root:root "$BOOT_DIR_ABS/$INITRD" \
                 && chmod 0600 "$BOOT_DIR_ABS/$INITRD" \
                 && exit 0
diff --git a/51-dracut-rescue.install b/51-dracut-rescue.install
index b2b3b9e..7782b40 100755
--- a/51-dracut-rescue.install
+++ b/51-dracut-rescue.install
@@ -87,7 +87,7 @@ case "$COMMAND" in
 
         [[ -d "$BOOT_DIR_ABS" ]] || mkdir -p "$BOOT_DIR_ABS"
 
-        if ! cp --reflink=auto "$KERNEL_IMAGE" "$BOOT_DIR_ABS/$KERNEL"; then
+        if ! cp "$KERNEL_IMAGE" "$BOOT_DIR_ABS/$KERNEL"; then
             echo "Can't copy '$KERNEL_IMAGE to '$BOOT_DIR_ABS/$KERNEL'!" >&2
         fi
 
diff --git a/Makefile b/Makefile
index 343569b..79b0824 100644
--- a/Makefile
+++ b/Makefile
@@ -144,7 +144,7 @@ install: all
 	ln -fs dracut-functions.sh $(DESTDIR)$(pkglibdir)/dracut-functions
 	install -m 0755 dracut-logger.sh $(DESTDIR)$(pkglibdir)/dracut-logger.sh
 	install -m 0755 dracut-initramfs-restore.sh $(DESTDIR)$(pkglibdir)/dracut-initramfs-restore
-	cp -arx modules.d $(DESTDIR)$(pkglibdir)
+	cp -a modules.d $(DESTDIR)$(pkglibdir)
 ifneq ($(enable_documentation),no)
 	for i in $(man1pages); do install -m 0644 $$i $(DESTDIR)$(mandir)/man1/$${i##*/}; done
 	for i in $(man5pages); do install -m 0644 $$i $(DESTDIR)$(mandir)/man5/$${i##*/}; done
diff --git a/dracut-init.sh b/dracut-init.sh
index 592a550..c61af6a 100644
--- a/dracut-init.sh
+++ b/dracut-init.sh
@@ -20,9 +20,9 @@
 export LC_MESSAGES=C
 
 if [[ "$EUID" = "0" ]] && ! [[ $DRACUT_NO_XATTR ]]; then
-    export DRACUT_CP="cp --reflink=auto --sparse=auto --preserve=mode,timestamps,xattr,links -dfr"
+    export DRACUT_CP="cp --preserve=mode,timestamps,xattr -dfr"
 else
-    export DRACUT_CP="cp --reflink=auto --sparse=auto --preserve=mode,timestamps,links -dfr"
+    export DRACUT_CP="cp --preserve=mode,timestamps -dfr"
 fi
 
 # is_func <command>
diff --git a/dracut.sh b/dracut.sh
index f562fa6..b6c88fb 100755
--- a/dracut.sh
+++ b/dracut.sh
@@ -2046,7 +2046,7 @@ if [[ $uefi = yes ]]; then
                 exit 1
             fi
         else
-            if cp --reflink=auto "${uefi_outdir}/linux.efi" "$outfile"; then
+            if cp "${uefi_outdir}/linux.efi" "$outfile"; then
                 dinfo "*** Creating UEFI image file '$outfile' done ***"
             fi
         fi
@@ -2056,7 +2056,7 @@ if [[ $uefi = yes ]]; then
         exit 1
     fi
 else
-    if cp --reflink=auto "${DRACUT_TMPDIR}/initramfs.img" "$outfile"; then
+    if cp "${DRACUT_TMPDIR}/initramfs.img" "$outfile"; then
         dinfo "*** Creating initramfs image file '$outfile' done ***"
     else
         rm -f -- "$outfile"
diff --git a/install/dracut-install.c b/install/dracut-install.c
index 17544ac..a57f342 100644
--- a/install/dracut-install.c
+++ b/install/dracut-install.c
@@ -314,10 +314,10 @@ static int cp(const char *src, const char *dst)
         pid = fork();
         if (pid == 0) {
                 if (geteuid() == 0 && no_xattr == false)
-                        execlp("cp", "cp", "--reflink=auto", "--sparse=auto", "--preserve=mode,xattr,timestamps", "-fL", src, dst,
+                        execlp("cp", "cp", "--preserve=mode,xattr,timestamps", "-fL", src, dst,
                                NULL);
                 else
-                        execlp("cp", "cp", "--reflink=auto", "--sparse=auto", "--preserve=mode,timestamps", "-fL", src, dst,
+                        execlp("cp", "cp", "--preserve=mode,timestamps", "-fL", src, dst,
                                NULL);
                 _exit(EXIT_FAILURE);
         }
@@ -326,10 +326,10 @@ static int cp(const char *src, const char *dst)
                 if (errno != EINTR) {
                         ret = -1;
                         if (geteuid() == 0 && no_xattr == false)
-                                log_error("Failed: cp --reflink=auto --sparse=auto --preserve=mode,xattr,timestamps -fL %s %s", src,
+                                log_error("Failed: cp --preserve=mode,xattr,timestamps -fL %s %s", src,
                                           dst);
                         else
-                                log_error("Failed: cp --reflink=auto --sparse=auto --preserve=mode,timestamps -fL %s %s", src,
+                                log_error("Failed: cp --preserve=mode,timestamps -fL %s %s", src,
                                           dst);
                         break;
                 }
diff --git a/modules.d/05toybox/module-setup.sh b/modules.d/05toybox/module-setup.sh
new file mode 100755
index 0000000..03b3397
--- /dev/null
+++ b/modules.d/05toybox/module-setup.sh
@@ -0,0 +1,32 @@
+#!/bin/bash
+
+# called by dracut
+check() {
+    require_binaries toybox || return 1
+
+    return 255
+}
+
+# called by dracut
+depends() {
+    return 0
+}
+
+# called by dracut
+install() {
+    local _i _path _toybox
+    local _progs=()
+    _toybox=$(type -P toybox)
+    inst $_toybox /usr/bin/toybox
+    for _i in $($_toybox); do
+        [[ ${_i} == toybox ]] && continue
+        _progs+=("${_i}")
+    done
+
+    for _i in "${_progs[@]}"; do
+        _path=$(find_binary "$_i")
+        [ -z "$_path" ] && continue
+        ln_r /usr/bin/toybox $_path
+    done
+}
+
diff --git a/modules.d/10i18n/module-setup.sh b/modules.d/10i18n/module-setup.sh
index dd45b66..4cc1684 100755
--- a/modules.d/10i18n/module-setup.sh
+++ b/modules.d/10i18n/module-setup.sh
@@ -119,7 +119,7 @@ install() {
         for __src in $(eval echo $dracutsysrootdir${kbddir}/{${KBDSUBDIRS}}); do
             _src=${__src#$dracutsysrootdir}
             inst_dir "$_src"
-            $DRACUT_CP -L -t "${initdir}/${_src}" "$__src"/*
+            $DRACUT_CP -L "$__src"/* "${initdir}/${_src}"
         done
 
         # remove unnecessary files
diff --git a/modules.d/95terminfo/module-setup.sh b/modules.d/95terminfo/module-setup.sh
index 532f5bd..0b247b5 100755
--- a/modules.d/95terminfo/module-setup.sh
+++ b/modules.d/95terminfo/module-setup.sh
@@ -11,7 +11,7 @@ install() {
     if [ -d $dracutsysrootdir${_terminfodir} ]; then
         for i in "l/linux" "v/vt100" "v/vt102" "v/vt220"; do
             inst_dir "$_terminfodir/${i%/*}"
-            $DRACUT_CP -L -t "${initdir}/${_terminfodir}/${i%/*}" "$dracutsysrootdir$_terminfodir/$i"
+            $DRACUT_CP -L "$dracutsysrootdir$_terminfodir/$i" "${initdir}/${_terminfodir}/${i%/*}"
         done
     fi
 }
-- 
2.29.2

