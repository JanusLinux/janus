From 021cca419411ee4f164c35ca5daf921c9edea7f3 Mon Sep 17 00:00:00 2001
From: Ishimoto Shinobu <nagakamira@gmail.com>
Date: Tue, 8 Dec 2020 02:09:27 +0900
Subject: [PATCH] fix building on musl libc

Signed-off-by: Ishimoto Shinobu <nagakamira@gmail.com>
---
 libnm-core/nm-utils.h                              |  4 ++++
 shared/nm-glib-aux/nm-json-aux.c                   |  4 ++++
 shared/systemd/src/basic/process-util.c            | 11 ++++++++++-
 shared/systemd/src/basic/socket-util.h             |  5 +++++
 shared/systemd/src/basic/sort-util.h               | 14 +++++++++++++-
 shared/systemd/src/basic/stdio-util.h              |  2 ++
 shared/systemd/src/basic/util.h                    |  6 ++++++
 src/NetworkManagerUtils.c                          |  1 +
 src/devices/nm-device-bridge.c                     |  1 +
 src/devices/nm-device.c                            |  4 ++++
 src/nm-manager.c                                   |  1 +
 src/platform/nm-linux-platform.c                   |  5 +++++
 src/platform/wifi/nm-wifi-utils.h                  |  4 ++++
 .../src/libsystemd-network/sd-dhcp6-client.c       |  2 +-
 14 files changed, 61 insertions(+), 3 deletions(-)

diff --git a/libnm-core/nm-utils.h b/libnm-core/nm-utils.h
index 9589c51..6b42883 100644
--- a/libnm-core/nm-utils.h
+++ b/libnm-core/nm-utils.h
@@ -15,7 +15,11 @@
 #include <netinet/in.h>
 
 /* For ETH_ALEN and INFINIBAND_ALEN */
+#if defined(__GLIBC__)
 #include <linux/if_ether.h>
+#else
+#define ETH_ALEN	6		/* Octets in one ethernet addr	 */
+#endif
 #include <linux/if_infiniband.h>
 
 #include "nm-core-enum-types.h"
diff --git a/shared/nm-glib-aux/nm-json-aux.c b/shared/nm-glib-aux/nm-json-aux.c
index 4212e62..83114c7 100644
--- a/shared/nm-glib-aux/nm-json-aux.c
+++ b/shared/nm-glib-aux/nm-json-aux.c
@@ -9,6 +9,10 @@
 
 #include <dlfcn.h>
 
+#ifndef RTLD_DEEPBIND
+#define RTLD_DEEPBIND 0
+#endif
+
 /*****************************************************************************/
 
 static void
diff --git a/shared/systemd/src/basic/process-util.c b/shared/systemd/src/basic/process-util.c
index 03ca04e..215384c 100644
--- a/shared/systemd/src/basic/process-util.c
+++ b/shared/systemd/src/basic/process-util.c
@@ -17,6 +17,9 @@
 #include <sys/wait.h>
 #include <syslog.h>
 #include <unistd.h>
+#ifndef __GLIBC__
+#include <pthread.h>
+#endif
 #if 0 /* NM_IGNORED */
 #if HAVE_VALGRIND_VALGRIND_H
 #include <valgrind/valgrind.h>
@@ -1152,11 +1155,13 @@ void reset_cached_pid(void) {
         cached_pid = CACHED_PID_UNSET;
 }
 
+#ifdef __GLIBC__
 /* We use glibc __register_atfork() + __dso_handle directly here, as they are not included in the glibc
  * headers. __register_atfork() is mostly equivalent to pthread_atfork(), but doesn't require us to link against
  * libpthread, as it is part of glibc anyway. */
 extern int __register_atfork(void (*prepare) (void), void (*parent) (void), void (*child) (void), void *dso_handle);
 extern void* __dso_handle _weak_;
+#endif
 
 pid_t getpid_cached(void) {
         static bool installed = false;
@@ -1185,7 +1190,11 @@ pid_t getpid_cached(void) {
                          * only half-documented (glibc doesn't document it but LSB does â€” though only superficially)
                          * we'll check for errors only in the most generic fashion possible. */
 
-                        if (__register_atfork(NULL, NULL, reset_cached_pid, __dso_handle) != 0) {
+                        #ifdef __GLIBC__
+                            if (__register_atfork(NULL, NULL, reset_cached_pid, __dso_handle) != 0) {
+                        #else
+                            if (pthread_atfork(NULL, NULL, reset_cached_pid) != 0) {
+                        #endif
                                 /* OOM? Let's try again later */
                                 cached_pid = CACHED_PID_UNSET;
                                 return new_pid;
diff --git a/shared/systemd/src/basic/socket-util.h b/shared/systemd/src/basic/socket-util.h
index 1ece911..c6d5a60 100644
--- a/shared/systemd/src/basic/socket-util.h
+++ b/shared/systemd/src/basic/socket-util.h
@@ -13,6 +13,11 @@
 #include <sys/socket.h>
 #include <sys/types.h>
 #include <sys/un.h>
+#if !defined(__GLIBC__)
+/* SIOCGSTAMPNS from linux/asm-generic.h 
+ * for src/systemd/src/libsystemd-network/sd-lldp.c */
+#include <linux/sockios.h>
+#endif
 
 #include "macro.h"
 #include "missing_socket.h"
diff --git a/shared/systemd/src/basic/sort-util.h b/shared/systemd/src/basic/sort-util.h
index a8dc3bb..2b6d842 100644
--- a/shared/systemd/src/basic/sort-util.h
+++ b/shared/systemd/src/basic/sort-util.h
@@ -5,6 +5,14 @@
 
 #include "macro.h"
 
+
+#ifndef __COMPAR_FN_T
+# define __COMPAR_FN_T
+typedef int (*__compar_fn_t) (const void *, const void *);
+typedef __compar_fn_t comparison_fn_t;
+typedef int (*__compar_d_fn_t) (const void *, const void *, void *);
+#endif
+
 void *xbsearch_r(const void *key, const void *base, size_t nmemb, size_t size,
                  __compar_d_fn_t compar, void *arg);
 
@@ -60,7 +68,11 @@ static inline void qsort_r_safe(void *base, size_t nmemb, size_t size, __compar_
                 return;
 
         assert(base);
-        qsort_r(base, nmemb, size, compar, userdata);
+#ifdef __GLIBC__
+         qsort_r(base, nmemb, size, compar, userdata);
+#else
+        g_qsort_with_data(base, nmemb, size, compar, userdata);
+#endif
 }
 
 #define typesafe_qsort_r(p, n, func, userdata)                          \
diff --git a/shared/systemd/src/basic/stdio-util.h b/shared/systemd/src/basic/stdio-util.h
index c3b9448..e80a938 100644
--- a/shared/systemd/src/basic/stdio-util.h
+++ b/shared/systemd/src/basic/stdio-util.h
@@ -1,7 +1,9 @@
 /* SPDX-License-Identifier: LGPL-2.1+ */
 #pragma once
 
+#if defined(__GLIBC__)
 #include <printf.h>
+#endif
 #include <stdarg.h>
 #include <stdio.h>
 #include <sys/types.h>
diff --git a/shared/systemd/src/basic/util.h b/shared/systemd/src/basic/util.h
index 6fc7480..fab72e5 100644
--- a/shared/systemd/src/basic/util.h
+++ b/shared/systemd/src/basic/util.h
@@ -30,6 +30,12 @@ static inline unsigned u64log2(uint64_t n) {
 #endif
 }
 
+#if !defined(__GLIBC__)
+typedef int (*__compar_fn_t) (const void*, const void*);
+typedef __compar_fn_t comparison_fn_t;
+typedef int (*__compar_d_fn_t) (const void *, const void *, void *);
+#endif
+
 static inline unsigned u32ctz(uint32_t n) {
 #if __SIZEOF_INT__ == 4
         return n != 0 ? __builtin_ctz(n) : 32;
diff --git a/src/NetworkManagerUtils.c b/src/NetworkManagerUtils.c
index 4739e9d..ceadb50 100644
--- a/src/NetworkManagerUtils.c
+++ b/src/NetworkManagerUtils.c
@@ -4,6 +4,7 @@
  * Copyright (C) 2005 - 2008 Novell, Inc.
  */
 
+#include <netinet/if_ether.h>
 #include "nm-default.h"
 
 #include "NetworkManagerUtils.h"
diff --git a/src/devices/nm-device-bridge.c b/src/devices/nm-device-bridge.c
index 48dcec1..4a6e08f 100644
--- a/src/devices/nm-device-bridge.c
+++ b/src/devices/nm-device-bridge.c
@@ -8,6 +8,7 @@
 #include "nm-device-bridge.h"
 
 #include <stdlib.h>
+#include <netinet/if_ether.h>
 
 #include "NetworkManagerUtils.h"
 #include "nm-device-private.h"
diff --git a/src/devices/nm-device.c b/src/devices/nm-device.c
index 0be05f2..ebf233b 100644
--- a/src/devices/nm-device.c
+++ b/src/devices/nm-device.c
@@ -17,7 +17,11 @@
 #include <arpa/inet.h>
 #include <fcntl.h>
 #include <linux/if_addr.h>
+#if defined(__GLIBC__)
 #include <linux/if_arp.h>
+#else
+#include <linux/if.h>
+#endif
 #include <linux/rtnetlink.h>
 
 #include "nm-std-aux/unaligned.h"
diff --git a/src/nm-manager.c b/src/nm-manager.c
index 46f81c7..a4f225e 100644
--- a/src/nm-manager.c
+++ b/src/nm-manager.c
@@ -14,6 +14,7 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <sys/sendfile.h>
+#include <asm/types.h>
 #include <limits.h>
 
 #include "nm-glib-aux/nm-c-list.h"
diff --git a/src/platform/nm-linux-platform.c b/src/platform/nm-linux-platform.c
index b377c85..7e32eea 100644
--- a/src/platform/nm-linux-platform.c
+++ b/src/platform/nm-linux-platform.c
@@ -6,6 +6,7 @@
 #include "nm-default.h"
 
 #include "nm-linux-platform.h"
+#include "wpan/nm-wpan-utils.h"
 
 #include <arpa/inet.h>
 #include <dlfcn.h>
@@ -14,7 +15,11 @@
 #include <libudev.h>
 #include <linux/fib_rules.h>
 #include <linux/ip.h>
+#if defined(__GLIBC__)
 #include <linux/if_arp.h>
+#else
+#include <linux/if.h>
+#endif
 #include <linux/if_bridge.h>
 #include <linux/if_link.h>
 #include <linux/if_tun.h>
diff --git a/src/platform/wifi/nm-wifi-utils.h b/src/platform/wifi/nm-wifi-utils.h
index d1df2fb..792f4ab 100644
--- a/src/platform/wifi/nm-wifi-utils.h
+++ b/src/platform/wifi/nm-wifi-utils.h
@@ -7,7 +7,11 @@
 #ifndef __WIFI_UTILS_H__
 #define __WIFI_UTILS_H__
 
+#if defined(__GLIBC__)
 #include <net/ethernet.h>
+#else /* musl libc */
+#define ETH_ALEN	6		/* Octets in one ethernet addr	 */
+#endif
 
 #include "nm-dbus-interface.h"
 #include "nm-setting-wireless.h"
diff --git a/src/systemd/src/libsystemd-network/sd-dhcp6-client.c b/src/systemd/src/libsystemd-network/sd-dhcp6-client.c
index ec7f1be..0a7737a 100644
--- a/src/systemd/src/libsystemd-network/sd-dhcp6-client.c
+++ b/src/systemd/src/libsystemd-network/sd-dhcp6-client.c
@@ -7,7 +7,7 @@
 
 #include <errno.h>
 #include <sys/ioctl.h>
-#include <linux/if_arp.h>
+#include <net/if_arp.h>
 #include <linux/if_infiniband.h>
 
 #include "sd-dhcp6-client.h"
-- 
2.28.0

