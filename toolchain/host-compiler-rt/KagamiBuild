name=host-compiler-rt
realpath="$REPO/llvm"
version="$(grep ^version $realpath/KagamiBuild | sed -e 's/version=//g')"
release=1
options=('bootstrap')
source=("https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/compiler-rt-$version.src.tar.xz")

build() {
	local targets

	case "$BARCH" in
		amd64|x86|arm64|armv7l|armv6l|armv5te) targets="crt builtins cfi safestack" ;;
		*) targets="crt builtins" ;;
	esac

	pushd "$SRC/compiler-rt-$version.src"
		msg "Patching Compiler-RT"
		patch -Np1 -i "$STUFF"/compiler-rt/0001-Make-sanitizers-work-on-musl-libc.patch
		patch -Np1 -i "$STUFF"/compiler-rt/0002-port-crt-on-MIPS-build-on-PowerPC.patch
	popd

	msg "Cross-compiling Compiler-RT"
	cd "$SRC"
	mkdir -p compiler-rt-builtins-build
	cd compiler-rt-builtins-build
	cmake "$SRC"/compiler-rt-$version.src \
		-DCMAKE_C_COMPILER_TARGET="$XTARGET" \
		-DCMAKE_ASM_COMPILER_TARGET="$XTARGET" \
		-DCMAKE_C_COMPILER="$TOOLS/bin/$XTARGET-clang" \
		-DCMAKE_CXX_COMPILER="$TOOLS/bin/$XTARGET-clang++" \
		-DCMAKE_AR="$TOOLS/bin/$XTARGET-ar" \
		-DCMAKE_NM="$TOOLS/bin/$XTARGET-nm" \
		-DCMAKE_RANLIB="$TOOLS/bin/$XTARGET-ranlib" \
		-DCMAKE_TRY_COMPILE_TARGET_TYPE=STATIC_LIBRARY \
		-DLLVM_CONFIG_PATH="$TOOLS/bin/llvm-config" \
		-DCOMPILER_RT_DEFAULT_TARGET_ONLY=ON \
		-DCOMPILER_RT_STANDALONE_BUILD=ON \
		-Wno-dev -G Ninja
	samu $targets

	for i in lib/linux/*; do
		install -Dm644 "$i" "$TOOLS"/lib/clang/$version/lib/linux/$(basename $i)
	done
}
